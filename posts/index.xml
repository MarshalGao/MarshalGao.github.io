<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on This is Marshal</title>
        <link>https://www.marshalgao.com/posts/</link>
        <description>Recent content in Posts on This is Marshal</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>&lt;a href=&#34;https://www.hku.hk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The University of Hong Kong&lt;/a&gt;</copyright>
        <lastBuildDate>Fri, 06 Nov 2020 00:45:23 +0800</lastBuildDate>
        <atom:link href="https://www.marshalgao.com/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>互联网广告产品经理学习内容</title>
            <link>https://www.marshalgao.com/%E4%BA%92%E8%81%94%E7%BD%91%E5%B9%BF%E5%91%8A%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9/</link>
            <pubDate>Fri, 06 Nov 2020 00:45:23 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/%E4%BA%92%E8%81%94%E7%BD%91%E5%B9%BF%E5%91%8A%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9/</guid>
            <description></description>
            <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E5%B9%BF%E5%91%8A%E6%96%B9%E5%90%91%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E4%B9%A0%E5%86%85%E5%AE%B9.png" alt=""></p>
]]></content>
        </item>
        
        <item>
            <title>ECOM7121 Kiva Crowdfunding</title>
            <link>https://www.marshalgao.com/ecom7121-kiva-crowdfunding/</link>
            <pubDate>Mon, 02 Nov 2020 21:02:03 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/ecom7121-kiva-crowdfunding/</guid>
            <description>Crowdfunding Crowdfunding platforms The key customers for the Kiva P2P micro-loan platform and the operation model
  Business model canvas for Kiva Summary
 crowdfunding platforms are two-sided platforms lenders make P2P loans to micro-entrepreneurs through the platform lenders are paid back over time local field partners select the micro-entrepreneurs to show case on the site and collect repayment for the loans Kiva has made more than $1B in mirco-loans, but has struggled to add mobile, social features  TinBox, TenCent, Ant Forest and Do-Good Social Mobile Apps Kiva compares to newer do-good social mobile apps TinBox</description>
            <content type="html"><![CDATA[<h2 id="crowdfunding">Crowdfunding</h2>
<p><strong>Crowdfunding platforms</strong>
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-11-02%20%E4%B8%8B%E5%8D%889.09.29.png" alt=""></p>
<p><strong>The key customers for the Kiva P2P micro-loan platform and the operation model</strong></p>
<div class="iframe-container">
    <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/LOdEG1bO9Ak" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>
<p><strong>Business model canvas for Kiva</strong>
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-11-02%20%E4%B8%8B%E5%8D%889.26.38.png" alt=""></p>
<p><strong>Summary</strong></p>
<ul>
<li>crowdfunding platforms are two-sided platforms</li>
<li>lenders make P2P loans to micro-entrepreneurs through the platform</li>
<li>lenders are paid back over time</li>
<li>local field partners select the micro-entrepreneurs to show case on the site and collect repayment for the loans</li>
<li>Kiva has made more than $1B in mirco-loans, but has struggled to add mobile, social features</li>
</ul>
<h2 id="tinbox-tencent-ant-forest-and-do-good-social-mobile-apps">TinBox, TenCent, Ant Forest and Do-Good Social Mobile Apps</h2>
<p><strong>Kiva compares to newer do-good social mobile apps</strong>
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-11-02%20%E4%B8%8B%E5%8D%889.36.23.png" alt=""></p>
<p><strong>TinBox</strong></p>
<ul>
<li>user flow and template
<ul>
<li>if you want to know more information about TinBox, please clike <a href="https://www.philanthropicpeople.com/2015/04/14/charity-donation-app-tinbox-promotes-free-giving/">here</a>.
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-11-02%20%E4%B8%8B%E5%8D%889.48.58.png" alt=""></li>
</ul>
</li>
</ul>
<div class="iframe-container">
    <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/GXAbBqSdTww" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>
<ul>
<li>make more social
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-11-02%20%E4%B8%8B%E5%8D%889.49.15.png" alt=""></li>
</ul>
<div class="iframe-container">
    <iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/DTZWL83Ex5Q" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
</div>
<ul>
<li>
<p>make more local</p>
<ul>
<li>select first three project screens based on (the third screen)
<ul>
<li>charities in user&rsquo;s locale</li>
<li>friends location</li>
<li>community or neighborhood</li>
<li>language</li>
<li>sponsor location</li>
<li>others</li>
</ul>
</li>
</ul>
</li>
<li>
<p>make more global</p>
<ul>
<li>select first three project screens based on (the third screen)
<ul>
<li>global causes</li>
<li>strangers popular causes</li>
<li>easy to understand impact</li>
<li>others</li>
</ul>
</li>
<li><a href="https://venturebeat.com/2013/08/10/google-one-today/">Google One Today</a> screens: quick value prop/impact statements&hellip;</li>
</ul>
</li>
</ul>
<p><strong>Millenial mobile do-good apps</strong></p>
<ul>
<li>micro-donations and micro-loans</li>
<li>two-sided platforms with corporate matching</li>
<li>frequent updates</li>
<li>fast and easy to use within daily routine</li>
<li>mobile-first and social media savvy</li>
<li>one-click&ndash;one-dollar or one euro/day</li>
<li>wide range of pre-screened causes to choose</li>
<li>wide geographical range</li>
<li>easy to understand donor impact explanation</li>
</ul>
<p><strong>Chinese do-good mobile apps</strong></p>
<ul>
<li>scale and speed</li>
<li>micro-donations 1 RMB to personalize virtual artwork with their name</li>
<li>send to friends as gifts making it viral</li>
<li>WeChat micro cashbacks</li>
<li>mobile payments with Alipay were rewarded with nutrients to feed your plant or get a real tree planted in Inner Mongolia</li>
<li>gamification like farmville</li>
<li>examples
<ul>
<li>15m RMB raised by Tencent Charity for mental health in a few hours</li>
<li>8.45m Ant Forest trees planted</li>
</ul>
</li>
</ul>
<h2 id="how-to-prototype-on-paper-your-do-good-mobile-social-app">How to Prototype on Paper Your Do-Good Mobile Social App</h2>
<p><strong>Mobile app MVP design and test minimum viable product</strong>
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-11-04%20%E4%B8%8A%E5%8D%8810.47.56.png" alt=""></p>
<ul>
<li>MVP (minimum viable product)
<ul>
<li>who is my key customer?
<ul>
<li>millenials who are social-mobile savvy and interested in my favorite non-profit cause</li>
</ul>
</li>
<li>what is my must-have value proposition?
<ul>
<li>an easy to understand social, do-good impact</li>
</ul>
</li>
<li>what partners might help sponsor this cause?
<ul>
<li>a company or organization that is interested in commnunity or local reputation</li>
</ul>
</li>
<li>example (CA fires pet rescue and return)
<ul>
<li>who is my key customer?
<ul>
<li>millenials who have pets and worry about the CA fires</li>
</ul>
</li>
<li>what is my must-have value proposition?
<ul>
<li>donate to rescue, care, feed and return pets evacuated during the fire to their homes</li>
</ul>
</li>
<li>what partners might help sponsor this cause?
<ul>
<li>International Fund for Animal Welfare (IFAW), county pet associations, micro-chip providers, pet food and supply stores</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-11-04%20%E4%B8%8A%E5%8D%8811.11.03.png" alt=""></p>
]]></content>
        </item>
        
        <item>
            <title>ECOM7121 The Crowd, How Users Create Value</title>
            <link>https://www.marshalgao.com/ecom7121-the-crowd-how-users-create-value/</link>
            <pubDate>Fri, 30 Oct 2020 17:35:15 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/ecom7121-the-crowd-how-users-create-value/</guid>
            <description>Google and Two-sided Freemium Business Models Two-sided markets
 definition  markets where a platform has two distinct user groups that provide each other with network benefits aka. two-sided network   example  credit cards on the Visa and MasterCard platform (card holders &amp;lt;-&amp;gt; vendors)   can be multi-sided  example  HMOs (Health Management Organizations) (doctors &amp;lt;-&amp;gt; care facilities &amp;lt;-&amp;gt; patients)     cross-network effects are typically positive, same-side effects may be positive or negative   Freemium = Free + Premium</description>
            <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/The%20Crowd%2C%20How%20Users%20Create%20Value.png" alt=""></p>
<h2 id="google-and-two-sided-freemium-business-models">Google and Two-sided Freemium Business Models</h2>
<p><strong>Two-sided markets</strong></p>
<ul>
<li>definition
<ul>
<li>markets where a platform has two distinct user groups that provide each other with network benefits</li>
<li>aka. two-sided network</li>
</ul>
</li>
<li>example
<ul>
<li>credit cards on the Visa and MasterCard platform (card holders &lt;-&gt; vendors)</li>
</ul>
</li>
<li>can be multi-sided
<ul>
<li>example
<ul>
<li>HMOs (Health Management Organizations) (doctors &lt;-&gt; care facilities &lt;-&gt; patients)</li>
</ul>
</li>
</ul>
</li>
<li>cross-network effects are typically positive, same-side effects may be positive or negative
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%885.54.03.png" alt=""></li>
</ul>
<p><strong>Freemium = Free + Premium</strong></p>
<ul>
<li>definition
<ul>
<li>give your service away for free to acquire a lot of customers</li>
<li>then offer premium price services or an enhanced version to make money or attract a premium-paying user group</li>
</ul>
</li>
<li>examples
<ul>
<li>Dropbox (cloud storage)</li>
<li>Linkedln (social media)</li>
<li>NYTimes.com (print newspaper)</li>
<li>Spotify (music streaming and downloading)</li>
</ul>
</li>
</ul>
<p><strong>Two-sided freemium model</strong></p>
<ul>
<li>example
<ul>
<li>Google search (free searchers &amp; premium advertisers)
<ul>
<li>your clicks help to develop algorithms</li>
<li>advertisers pay for best matching</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%886.47.44.png" alt=""></p>
<h2 id="flickr-photo-sharing-community-and-multiple-revenue-streams">Flickr (Photo Sharing Community) and Multiple Revenue Streams</h2>
<p><strong>History</strong></p>
<ul>
<li>2005 marked the crossover between user generated content uploaded and downloaded data from static company websites
<ul>
<li>UGC: user generated content</li>
<li>UGC &gt; downloaded data</li>
</ul>
</li>
<li>2007 marked the start of the Mobile App Economy</li>
</ul>
<p><strong>Common ways to measure mobile businesses</strong></p>
<ul>
<li>ARPU: average revenue per user</li>
<li>DAU: daily active user</li>
<li>MAU: monthly active user</li>
<li>DAU/MAU: currently user survival rate</li>
<li>CPA: cost per action (user action after promotion)</li>
<li>CAC: customer acquisition cost</li>
<li>LTV: life time value (value from user)</li>
</ul>
<p><strong>Common digital and mobile revenue models</strong>
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%888.41.47.png" alt=""></p>
<p><strong>Flickr&rsquo;s business model and four digital revenue streams</strong></p>
<ul>
<li>business model
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%889.12.35.png" alt=""></li>
<li>multiple RPU digital revenue streams
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%889.13.35.png" alt=""></li>
<li>four digital revenue streams
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%889.13.07.png" alt=""></li>
</ul>
<p><strong>Flickr was compared to Shutterfly and Retail photo online print store</strong>
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-31%20%E4%B8%8A%E5%8D%8812.26.30.png" alt=""></p>
<p><strong>The Digital Stone Soup fable is used to explain how digital businesses can generate multiple revenue streams and RPU from shared digital data while physical goods are &ldquo;depletive&rdquo;</strong></p>
<ul>
<li>the <a href="https://www.sohu.com/a/243252618_708491">Stone Soup</a> link</li>
</ul>
<h2 id="threadless-and-crowdsourcing-competitive-advantage">Threadless and Crowdsourcing Competitive Advantage</h2>
<p><strong>The Business Model Canvas and the book that introduced it was co-created by 470 crowd-sourcing unpaid contributors</strong></p>
<ul>
<li>crowdsourcing = crowd + outsourcing
<ul>
<li>is the process of obtaining needed services, ideas, or content by soliciting contributions from a large group of people, especially an online community, rather than from employees or suppliers</li>
<li>it was coined in 2005 as a portmanteau of crowd and outsourcing</li>
</ul>
</li>
</ul>
<p><strong>Create a crowdsourced design activity for a bicycle company&rsquo;s value chain</strong></p>
<p><strong>Often contests are used to ensure that crowd-sourced designs are popular with potential buyers in the market</strong></p>
<p><strong>Local Motors and BMW have had success using crowdsourcing contests for auto design</strong></p>
<ul>
<li>use crowdsourcing for designing innovative Smart City car designs that address unmet customer needs</li>
<li>reduce marketing, distribution, retail store, support costs by going online and using social media campaigns
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-31%20%E4%B8%8A%E5%8D%8810.09.09.png" alt=""></li>
</ul>
<p><strong>Threadless uses crowdsourcing for t-shirt design and changes the customer relationship with its designers to be more similar to fans of American idol singing contests</strong></p>
<ul>
<li>method
<ul>
<li>shares cool t-shirt designs</li>
<li>designers get recognition &amp; reward</li>
</ul>
</li>
<li>bussiness model
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-31%20%E4%B8%8A%E5%8D%8810.32.03.png" alt=""></li>
</ul>
<h2 id="goldcorp-and-gold-mining">Goldcorp and Gold Mining</h2>
<p><strong>Goldcorp uses geologic data analysis crowdsourcing enabled by digital platforms to change the key activities, resources done in-house</strong>
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-31%20%E4%B8%8A%E5%8D%8810.57.23.png" alt=""></p>
<p><strong>Crowdsourcing increased their revenue by 10 times and their profitability by making it easier to find productive gold mining destinations</strong></p>
<p><strong>Goldcorp&rsquo;s approach transformed the gold-mining industry, previously a very traditional industry fearful of sharing geologic data</strong></p>
<ul>
<li>business model
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-31%20%E4%B8%8A%E5%8D%8810.57.36.png" alt=""></li>
</ul>
<p><strong>Many traditional industries, from t-shirt to software, from auto-makers to gold mining, are experimenting with crowdsourcing</strong></p>
]]></content>
        </item>
        
        <item>
            <title>ECOM7121 Introduction</title>
            <link>https://www.marshalgao.com/ecom7121-introduction/</link>
            <pubDate>Tue, 27 Oct 2020 17:37:28 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/ecom7121-introduction/</guid>
            <description>Strategy and Digital Dynamic Capabilities Two complementary strategy approaches
 Porter&amp;rsquo;s industry-level competitive advantage analysis  industry contains lots of firms firms would compete with each other a firm want to be better, it should do better than the industry average example: mobile industry pre-2007  strategic recommendations to companies below the average  raise price through differentiation  can do something in design, e.g. Samsung and Armani   lower cost to improve profitability  it was not very easy to do because what you could do for cost was already being driven down as much as possible globally           firm-level dynamic capabilities analysis  start by the firm firms can actually disrupt, shape and transform entire industries example: Apple transformed mobile industry in 2008  by digital innovation (AppStore)  combining and collaborating have a company like Apple who can orchestrate that collaboration on a platform   apple provide a platform (inside) for developers (outside)      Dynamic digital capabilities</description>
            <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/Introduction.png" alt=""></p>
<h2 id="strategy-and-digital-dynamic-capabilities">Strategy and Digital Dynamic Capabilities</h2>
<p><strong>Two complementary strategy approaches</strong></p>
<ul>
<li>Porter&rsquo;s industry-level competitive advantage analysis
<ul>
<li>industry contains lots of firms</li>
<li>firms would compete with each other</li>
<li>a firm want to be better, it should do better than the industry average</li>
<li>example: mobile industry pre-2007
<ul>
<li>strategic recommendations to companies below the average
<ul>
<li>raise price through differentiation
<ul>
<li>can do something in design, e.g. Samsung and Armani</li>
</ul>
</li>
<li>lower cost to improve profitability
<ul>
<li>it was not very easy to do because what you could do for cost was already being driven down as much as possible globally</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-29%20%E4%B8%8B%E5%8D%884.34.24.png" alt=""></p>
<ul>
<li>firm-level dynamic capabilities analysis
<ul>
<li>start by the firm</li>
<li>firms can actually disrupt, shape and transform entire industries</li>
<li>example: Apple transformed mobile industry in 2008
<ul>
<li>by digital innovation (AppStore)
<ul>
<li>combining and collaborating</li>
<li>have a company like Apple who can orchestrate that collaboration on a platform</li>
</ul>
</li>
<li>apple provide a platform (inside) for developers (outside)</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-28%20%E4%B8%8A%E5%8D%8810.54.28.png" alt=""></p>
<p><strong>Dynamic digital capabilities</strong></p>
<ul>
<li>definition
<ul>
<li>firm-level strategic ability to combine inside and outside digital competences to address volatile environments and periods of rapid change</li>
</ul>
</li>
<li>four types
<ul>
<li>democratized innovation
<ul>
<li>user-to-user or peer-to-peer collaboration produces positive network effects with public good benefits</li>
<li>founders no value</li>
<li>e.g. Wikipedia</li>
</ul>
</li>
<li>crowdsourcing
<ul>
<li>user-to-company collaboration produces positive network effects, often through 2-sided markets so that free users are subsidized by paying customers</li>
<li>typically, a company is able to capture tangible, monetary benefits from the community in exchange for continued innovation and improvement</li>
<li>users can get profit</li>
<li>e.g. voting for your perference</li>
</ul>
</li>
<li>platform innovation
<ul>
<li>company-to-user innovation where a company provides the platform for users and developers to distribute their software, applications or digital goods to their social or professional networks or to the marketplace at large.</li>
<li>e.g. Apple, because it provided a platform</li>
</ul>
</li>
<li>recombinant innovation
<ul>
<li>company to company</li>
<li>e.g. Apple and Gracenote</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-29%20%E4%B8%8B%E5%8D%884.50.15.png" alt=""></p>
<h2 id="from-pipelines-to-platforms">From Pipelines to Platforms</h2>
<p><strong>History</strong></p>
<ul>
<li>cellphones transformed to smartphones
<ul>
<li>in 2008, the &ldquo;dumb cellphone&rdquo; became a smartphone with a networked platform of downloadable and shareable software apps</li>
</ul>
</li>
</ul>
<p><strong>The economies of physical vs. digital goods</strong></p>
<ul>
<li>the shift from physical to digital goods triggered a shift from demand-side economies to supply-side economies
<ul>
<li>supply-side scale
<ul>
<li>if the company makes a lot of cellphones, the cost would be lower</li>
<li>e.g. Nokia</li>
</ul>
</li>
<li>demand-side scale (or network effects)
<ul>
<li>the value to users actually increases with the network, rather than with manufacturing costs</li>
<li>e.g. Apple</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-29%20%E4%B8%8B%E5%8D%885.44.41.png" alt=""></p>
<p><strong>Revenues per cellphone vs. revenues per app user</strong></p>
<ul>
<li>revenues per cellphone became revenues per user, with billions of apps downloaded
<ul>
<li>examples
<ul>
<li>Nokia: per cell phone</li>
<li>Apple: both iPhone and revenues generated from users (may not much money from per user, but the number of users is large)
<ul>
<li>ARPU: average revenue per user</li>
<li>take 30% fee from developers</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-29%20%E4%B8%8B%E5%8D%886.01.39.png" alt=""></p>
<ul>
<li>digital mobile-enabled substitues in 2020
<ul>
<li>digital companies are more profitable because they are able to use demand-side economies, rather than supply-side economies
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-29%20%E4%B8%8B%E5%8D%886.09.28.png" alt=""></li>
</ul>
</li>
</ul>
<p><strong>ABCD technologies</strong></p>
<ul>
<li>ABCD
<ul>
<li>AI</li>
<li>blockchain</li>
<li>cloud</li>
<li>data</li>
</ul>
</li>
<li>linear thinking in the past, but now is exponential thinking
<ul>
<li>exponential growth in digital goods = zero transaction costs + networks + crowds</li>
<li>&ldquo;dumb cellphone&rdquo; value chain in 2007 was linear (as the first picture of this page)
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8A%E5%8D%8810.21.08.png" alt=""></li>
</ul>
</li>
</ul>
<h2 id="the-platform-ecosystem">The Platform Ecosystem</h2>
<p><strong>Five-Forces and industry structual analysis</strong></p>
<ul>
<li>Porter’s Five-Forces industry structure assumes that the profitability of industry competitors is determined by suppliers and buyers in a linear
value chain or pipeline.
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8A%E5%8D%8810.48.45.png" alt=""></li>
</ul>
<p><strong>A platform is a nonlinear dynamic ecosystem</strong></p>
<ul>
<li>four types of platform ecosystem players and roles
<ul>
<li><strong>owners</strong> of the platform that control IP and governance</li>
<li><strong>providers</strong> that serve as the platform interface with users</li>
<li><strong>producers</strong> that create offerings on the platform</li>
<li><strong>consumers</strong> that use those offerings</li>
<li>example: Apple Appstore&rsquo;s platform ecosystem
<ul>
<li><strong>Apple = owners</strong> of the AppStore iOS platform that control IP and governance</li>
<li><strong>Apple iPhone and iPad = providers</strong> that serve as the iOS platform interface with users</li>
<li><strong>Apple iPhone iOS App Developer = producers</strong> that create offerings on the platform</li>
<li><strong>consumers</strong> that use those offerings</li>
<li>Apple&rsquo;s AppStore is a non-linear, dynamic and interactive ecosystem</li>
<li>Apple orchestrates and facilitates the network and users and developers and receives 30% of the app developers' revenues for managing the AppStore</li>
</ul>
</li>
</ul>
</li>
<li>ecosystem platforms like the AppStore and Google Play have created positive sum marketplaces and blue oceans out of traditional zero sum industries
<ul>
<li>where value is created for users, developer, providers and platform owners</li>
<li>three types of games
<ul>
<li>positive sum: economic, financial or social rewards are created as a result of playing the game</li>
<li>zero sum: the total rewards available from playing the game are independent of the procee of play</li>
<li>negative sum: economic, financial or social rewards are destroyed as a result of playing the game</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8A%E5%8D%8811.00.09.png" alt=""></p>
<h2 id="ai-business-platforms">AI Business Platforms</h2>
<p><strong>The Alibaba AI smart business process</strong></p>
<ul>
<li>overview
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%884.05.11.png" alt=""></li>
<li>a four-step process
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%884.15.47.png" alt="">
<ul>
<li>examples
<ul>
<li>applying the AI smart business four-step process for Ant Financial Micro Loans
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%884.18.16.png" alt=""></li>
<li>applying the AI smart business four-step process for online bike sharing and sesame credit
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%884.19.59.png" alt=""></li>
</ul>
</li>
</ul>
</li>
</ul>
<p><strong>Diagramming platforms on the business model canvas template</strong></p>
<ul>
<li>structure
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%884.30.28.png" alt=""></li>
<li>example: Apple iOS AppStore platform
<img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-30%20%E4%B8%8B%E5%8D%884.35.47.png" alt=""></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>ICOM6045 Access Control</title>
            <link>https://www.marshalgao.com/icom6045-access-control/</link>
            <pubDate>Fri, 23 Oct 2020 14:25:27 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/icom6045-access-control/</guid>
            <description>Introduction  access control: deals with the prevention and detection of unauthorized actions by users of a computer system indentification and authentication: stating who you are and proving the identification claim with credentials
 username (identification) and password (authentication) other authentication techniques
 something you know, e.g. password      group password criteria try to crack the passwords     A passwords consists of &amp;gt;= 6 characters, with at least 1 non-letter 30% easy to crack (passwords easy to remember)   B passwords based on passphrases 10% were cracked (passwords easy to remember)   C passwords consists of 8 randomly selected characters 10% were cracked (passwords difficult to remember)     something you have, e.</description>
            <content type="html"><![CDATA[<h2 id="introduction">Introduction</h2>

<ul>
<li>access control: deals with the prevention and detection of unauthorized actions by users of a computer system</li>

<li><p>indentification and authentication: stating who you are and proving the identification claim with credentials</p>

<ul>
<li>username (identification) and password (authentication)</li>

<li><p>other authentication techniques</p>

<ul>
<li>something you know, e.g. password
<br></li>
</ul>

<table>
<thead>
<tr>
<th align="center">group</th>
<th align="center">password criteria</th>
<th align="center">try  to crack the passwords</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">A</td>
<td align="center">passwords consists of &gt;= 6 characters, with at least 1 non-letter</td>
<td align="center">30% easy to crack (passwords easy to remember)</td>
</tr>

<tr>
<td align="center">B</td>
<td align="center">passwords based on passphrases</td>
<td align="center">10% were cracked (passwords easy to remember)</td>
</tr>

<tr>
<td align="center">C</td>
<td align="center">passwords consists of 8 randomly selected characters</td>
<td align="center">10% were cracked (passwords difficult to remember)</td>
</tr>
</tbody>
</table>

<ul>
<li>something you have, e.g. smartcard

<ul>
<li>using pin and card to verify identity</li>
</ul></li>
<li>something you are, e.g. biometric

<ul>
<li>enrollment/registration: recording of fingerprint info

<ul>
<li>fingerprint is captured by a device</li>
<li>features are extracted and recorded in a database</li>
</ul></li>
<li>verification/identification: checking of a fingerprint

<ul>
<li>features are compared with those in database

<ul>
<li>known-subject matching: match with one stored fingerprint features record</li>
<li>unknown-subject matching: match all records to find records with similar features (more on investigation,less popular)</li>
</ul></li>
<li>types of features

<ul>
<li>global features: patterns (aggregate characteristics of ridges)

<ul>
<li>arch: ridges enter from one side of the finger, rise in the center forming an arc, and then exit the other side</li>
<li>loop: ridges enter from one side of a finger, form a curve, and tend to exit from the same side they enter</li>
<li>whorl: ridges form circularly around a central point on the finger
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E5%9B%BE%E7%89%87%203.png" alt=""></figure></li>
</ul></li>
<li>local features: minutiae (difficult)

<ul>
<li>ridge ending</li>
<li>bifurcation</li>
<li>short ridge (or dot)
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E5%9B%BE%E7%89%87%205.png" alt=""></figure></li>
</ul></li>
</ul></li>
<li>fingerprint minutiae matching

<ul>
<li>minutiae are extracted from the 2 fingerprints and stored as sets of points in the 2-dimensional plane</li>
<li>each minutia is stored as a triplet {x,y, θ}, where (x,y) is the minutia is the location coordinate and θ is the minutia angle</li>
<li>formulated as a “point pattern matching” problem and processed by pattern recognition algorithm
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E5%9B%BE%E7%89%87%206.png" alt=""></figure></li>
</ul></li>
<li>fingerprint scanner would check, e.g. iPhone

<ul>
<li>fingerprint, verify whether it is correct</li>
<li>alive, the finger is alive, not just cut one from others (so artificial finger cannnot unlock)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>

<li><p>definitions</p>

<ul>
<li>subject: a user</li>
<li>credential: the required proof needed by the system to validate the identity of the user, e.g. the password</li>
<li>principal: a name associated with a subject, e.g. username</li>
<li>subject can have multiple names, e.g. different username on different machine</li>
</ul></li>
</ul></li>

<li><p>authorization and access control: restriction on the ability of a subject to use a system or an object in that system</p></li>
</ul>

<h2 id="windows-authentication">Windows Authentication</h2>

<ul>
<li>username and password are used for authentication</li>
<li>windows 2000 uses two methods

<ul>
<li>MSV1_0

<ul>
<li>stand-alone station</li>
<li>simple

<ul>
<li>just username and hashed password</li>
<li>do matching with SAM (security account manager)

<ul>
<li>match -&gt; success</li>
<li>no match -&gt; fail</li>
</ul></li>
<li>SAM: the encrypted passwords are stored in the user accounts which are held in the SAM database

<ul>
<li>the SAM database is part of the registry</li>
<li>a binary life, accessed using SAM APIs</li>
<li>each password is hashed using a one-way function, i.e. password cannot be retrieved in plain form (if you forget your password, you lose it)</li>
</ul></li>
</ul></li>
<li>CTRL+ALT+DEL

<ul>
<li>aka “secure attention key”: generates calls to low-level functions that cannot be duplicated by application programs</li>
<li>invokes the Windows operating system logon screen</li>
<li>provides a trusted path from the keyboard to the login process (winlogon.exe)</li>
</ul></li>
</ul></li>
<li>Kerberos

<ul>
<li>network environment users</li>
<li>KDC (key distribution center)

<ul>
<li>authenticates users at login and issues tickets which are valid for one session</li>
<li>maintain a database of secrect keys of all users</li>
<li>two components

<ul>
<li>AS (authentication server): aka. Kerberos server, verify who you are

<ul>
<li>a user presents an authenticating credential (e.g. password) to the authentication server</li>
<li>AS returns a ticket to the user showing that the user has passed authentication</li>
</ul></li>
<li>TGS (ticket granting server): give you personal ticket, using this to access the resource (different people have different tickets, due to AS)

<ul>
<li>a users wants to access a resource R (e.g. a file), he sends his authenticated ticket and a request to use R to TGS</li>
<li>the TGS returns 2 tickets to the user: one shows that the user’s access to R is authorized, the other is for the user to present to R in order to access R</li>
</ul></li>
</ul></li>
</ul></li>
<li>Needham and Schroeder Protocol

<ul>
<li>a key exchange protocol used in Kerberos</li>
<li>based on symmetric key crytography</li>
<li>setting

<ul>
<li>Kab: session key between A and B</li>
<li>Na, Nb: random numbers, avoid sending request again and again</li>
<li><span  class="math">\(E_K(M)\)</span>: encrypt M using K
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-27%20%E4%B8%8B%E5%8D%885.22.17.png" alt=""></figure></li>
</ul></li>
</ul></li>
<li>Kerberos Authentication Protocol initiating a Kerberos session

<ul>
<li>user U with password pw</li>
<li>Kerberos server: store (U, pw)</li>
<li><span  class="math">\(K_{K,tgs}\)</span>: the secret key shared between Kerbers server and TGS</li>
<li><span  class="math">\(K_{a,tgs}\)</span>: the session key to be used between U and TGS</li>
<li><span  class="math">\({Ticket}_{a,tgs}\)</span>: contains the session key <span  class="math">\(K_{a,tgs}\)</span> encrypted using <span  class="math">\(K_{K,tgs}\)</span>
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E5%9B%BE%E7%89%87%207.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>ICOM6012 Network Layer</title>
            <link>https://www.marshalgao.com/icom6012-network-layer/</link>
            <pubDate>Wed, 21 Oct 2020 21:29:33 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/icom6012-network-layer/</guid>
            <description>Overview Services and protocols
 transport segment from sending to receiving host network layer protocols in every Internet device, including hosts and routers IP provides best-effort services only two functions  forwarding (data plane): local action, move arriving packets from router&#39;s input link to appropriate router output link routing (control plane): global action, generated by routing algorithms and determine source-destination paths (end-to-end)  centralized (e.g. telephone network)  &amp;quot;emerging&amp;quot; approach under the context of Software-Defined Networking (SDN) routing is done by controller (a centralized server)  Q: Different routing algorithms can be easily used (why)?</description>
            <content type="html"><![CDATA[<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/Network%20Layer(new).png" alt=""></figure></p>

<h2 id="overview">Overview</h2>

<p><strong>Services and protocols</strong></p>

<ul>
<li>transport segment from sending to receiving host</li>
<li>network layer protocols in every Internet device, including hosts and routers</li>
<li>IP provides best-effort services only</li>
<li>two functions

<ul>
<li>forwarding (data plane): local action, move arriving packets from router's input link to appropriate router output link</li>
<li>routing (control plane): global action, generated by routing algorithms and determine source-destination paths (end-to-end)

<ul>
<li>centralized (e.g. telephone network)

<ul>
<li>&quot;emerging&quot; approach under the context of Software-Defined Networking (SDN)</li>
<li>routing is done by controller (a centralized server)

<ul>
<li><strong>Q: Different routing algorithms can be easily used (why)?</strong></li>
<li>A: Yes, the routing paths are determined by ourselves. This time I choose x path (the shortest way), the next time I can choose y path (the lowest delay way). Because routers do not collaborate.</li>
</ul></li>
<li>the controller determines the paths (based on various packet header fields), and configures the forwarding tables at routers</li>
<li>In SDN, routers are called &quot;openflow switches&quot;, because the routing function is done by the controller

<ul>
<li><strong>Q: Can we use this method in the whole network?</strong></li>
<li>A: It is impossible. This method can only be used in small network, such as campus network, enterprise network and datacenter network.</li>
</ul></li>
<li>should obey the Openflow Specification (standard)</li>
<li>routing can be designed by software (programming, you can control the routing path by yourself)</li>
</ul></li>
<li>distributed

<ul>
<li>routers collaborate with each other to find (shortest) paths (based on destination), and configure their own fowarding tables accordingly</li>
<li>self-healing</li>
<li>routing protocol is implemented inside routers</li>
<li>network operator lacks control of routing paths
<br></li>
</ul></li>
</ul></li>
</ul></li>
</ul>

<h2 id="forwarding">Forwarding</h2>

<p><strong>What is inside a router</strong></p>

<ul>
<li>router architecture overview
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-21%20%E4%B8%8B%E5%8D%8810.59.37.png" alt=""></figure>

<ul>
<li>input port functions

<ul>
<li>decentralized switching (the red one)

<ul>
<li>given data dest, lookup out port using forwarding table in input port memory</li>
<li>goal: complete input port processing at &quot;line rate/speed&quot; (completely use the bandwidth, not want to become bottlenect)</li>
<li>queuing: if datagrams arrive faster than forwarding rate into switch fabric
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-22%20%E4%B8%8B%E5%8D%882.23.40.png" alt=""></figure></li>
</ul></li>
</ul></li>
<li>switching fabrics

<ul>
<li>memory: links have been generated</li>
<li>bus: just like broadcasting</li>
<li>crossbar: lost of buses, just like a small switch

<ul>
<li>configure some points connection or disconnection to make packets can be transmitted parallelly
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-22%20%E4%B8%8B%E5%8D%882.47.52.png" alt=""></figure></li>
</ul></li>
<li>some high-speed router combine different techniques together</li>
<li>switching rate: rate at which packets can be transferred

<ul>
<li>output-queued switch: switching rate = N times of line rate

<ul>
<li>allow N packets (R) come to one output port together</li>
<li>one packet come, output immediately (ideal), but expensive</li>
</ul></li>
<li>input-queued switch: switching rate = line rate

<ul>
<li>only allow single packet to one output port, others would wait (if buffer flow, tcp would help)</li>
<li>in practice, use this method
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-22%20%E4%B8%8B%E5%8D%883.06.18.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul></li>
<li>output ports

<ul>
<li>buffering required when datagrams arrive from fabric faster than the transmission rate</li>
<li>scheduling discipline chooses among queued datagrams for transmission
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-22%20%E4%B8%8B%E5%8D%887.44.59.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul>

<p><strong>IP: the Internet protocol</strong></p>

<ul>
<li>routing protocols and ICMP all rely on IP, so IP is the &quot;only&quot; standard in the network layer</li>
<li>datagram format

<ul>
<li>ver: 4 bits, e.g. IPv4, IPv6</li>
<li>header length: 4 bits, 4 bytes as a union (just like TCP), the minimum header size is 20 bytes</li>
<li>type of service: 8 bits, choose which type of service should be used, because the designer believe IP can do more than best-effort things (but majority people do not use this)</li>
<li>length: theoretically, maximum size of datagram is <span  class="math">\(2^{16}-1\)</span>

<ul>
<li>actually, smaller than that, due to frame has its limitation</li>
</ul></li>
<li>16-bit identifier: judge the packets belong to the same original message</li>
<li>flags: show the order of one packet, e.g. this packet is the last one of the original message</li>
<li>fragment offset: reassembly original message in order

<ul>
<li>many routers may not support fragmentation</li>
<li>try not to make the message be fragmented (in designer view)</li>
<li>IPv6 removes 16-bit identifier, flags and fragment offset

<ul>
<li>fragmentation would be done by host, not router</li>
</ul></li>
</ul></li>
<li>time to live: set by sending host, 255 (max, initially, due to 8 bits)

<ul>
<li>arrive at each router, minus 1, until 0, drop it</li>
<li>prevent looping</li>
</ul></li>
<li>upper layer: link the transport layer and network layer

<ul>
<li>6: TCP</li>
<li>17: UDP</li>
<li>89: OSPF</li>
</ul></li>
<li>header checksum: hop-by-hop (due to the value of time to live has changed) basis error detection, only calculate header (check before forwarding)

<ul>
<li>checksum of TCP and UDP are end-to-end basis, calculate all things
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-22%20%E4%B8%8B%E5%8D%889.07.11.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul>

<p><strong>IP addressing</strong></p>

<ul>
<li>IP address is associated with interface, not host

<ul>
<li>multiple interfaces mean multiple IP addresses</li>
<li>interface: connection between host/router and physical/wireless link

<ul>
<li>router has multiple interfaces, typically</li>
<li>host has one or two interfaces, typically (e.g. wired Ethernet, WiFi, Bluetooth)</li>
<li><strong>Q: How are interfaces actually connected?</strong></li>
<li>A: Ethernet switches, WiFi base station, etc.</li>
</ul></li>
</ul></li>
<li>subnet: a network inside a network

<ul>
<li>device interfaces can communicate with each other without routers</li>
<li>should have unique subnet address</li>
<li>each forwarding table entry corresponds to a subnet, or a range of addresses, to make forwarding table simple

<ul>
<li>forwarding table would be bottleneck, due to finding routes</li>
</ul></li>
</ul></li>
<li>structure

<ul>
<li>subnet part: high order bits (subnet mask)</li>
<li>host part: remaining low order bits

<ul>
<li>within a subnet, host address must be unique</li>
</ul></li>
</ul></li>
<li>old days: classful addressing
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-22%20%E4%B8%8B%E5%8D%889.36.37.png" alt=""></figure></li>
<li>CIDR (classless interdomain routing)

<ul>
<li>subnet portion of address of arbitrary length</li>
<li>address format: a.b.c.d/x, where x is number bits in subnet portion of address</li>
<li>specific (0.0.0.0 means you have no IP address)
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-22%20%E4%B8%8B%E5%8D%889.46.50.png" alt=""></figure></li>
</ul></li>
<li>how to get IP addresses

<ul>
<li>host part: DHCP (dynamic host configuration protocol)

<ul>
<li>DHCP server would be in the subnet (e.g. at home, WiFi router has a DHCP server), without configuration by user</li>
<li>overview (dora)

<ul>
<li>host broadcasts &quot;DHCP <strong>d</strong>iscover&quot; msg (optional, due to lease timeout, just jump to the last two steps)

<ul>
<li>broadcast</li>
<li>src: 0.0.0.0 68</li>
<li>dest: 255.255.255.255 67</li>
</ul></li>
<li>DHCP server responds with &quot;DHCP <strong>o</strong>ffer&quot; msg (optional, can be multiple, but only accept one)

<ul>
<li>broadcast</li>
<li>src: 223.1.2.5 67</li>
<li>dest: 255.255.255.255 68</li>
<li>lifetime: 3600s</li>
</ul></li>
<li>host requests IP address: &quot;DHCP <strong>r</strong>equest&quot; msg

<ul>
<li>broadcast (let other DHCP servers know you want to accept one offer, others would know their offers are not successful)</li>
<li>src: 0.0.0.0 68</li>
<li>dest: 255.255.255.255 67</li>
<li>lifetime: 3600s</li>
</ul></li>
<li>DHCP server sends address: &quot;DHCP <strong>a</strong>ck&quot; msg

<ul>
<li>broadcast</li>
<li>src: 223.1.2.5 67</li>
<li>dest: 255.255.255.255 68</li>
<li>lifetime: 3600s</li>
</ul></li>
</ul></li>
<li>other parts of DHCP

<ul>
<li>IP address of first-hop router</li>
<li>name and IP address of DNS server (e.g. dns.google.com -&gt; 8.8.8.8, due to collection of data, it is free)</li>
<li>subnet mask (indicating network versus host portion of address)

<ul>
<li>it can dertermine whether the packet transmission needs a router</li>
</ul></li>
</ul></li>
</ul></li>
<li>subnet part: from ISP/ICANN -&gt; public IP addresses (unique on the Internet)

<ul>
<li>but in setting up a new WiFi router, network part address -&gt; private IP addresses (unique on the home network, so your this IP address can be the same as the others)</li>
</ul></li>
</ul></li>

<li><p>NAT (network address translation)</p>

<ul>
<li>used in routers

<ul>
<li>use port number (should be unique, other processes can not use) to match with both sides</li>
</ul></li>
<li>translates a set of IP addresses to another set of IP addresses (using translation table)</li>
<li>help preserve the limited amount of IPv4 public IP addresses (with private IP addresses)

<ul>
<li>public IP addresses

<ul>
<li>publicly registered</li>
<li>directly access the Internet with a public IP address</li>
</ul></li>
<li>private IP addresses

<ul>
<li>not publicly registered</li>
<li>cannot directly access the Internet with a private IP address</li>
<li>only used internally, those IP addressed can not be seen on the Internet or routers</li>
<li>if the packet contains these IP addresses, it may be considered as an error and dropped immediately
<br></li>
</ul></li>
</ul></li>
</ul>

<table>
<thead>
<tr>
<th align="center"><strong>name</strong></th>
<th align="center"><strong>start IP address</strong></th>
<th align="center"><strong>end IP address</strong></th>
<th align="center"><strong>subnet</strong></th>
<th align="center"><strong>remark</strong></th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">24-bit block</td>
<td align="center">10.0.0.0</td>
<td align="center">10.255.255.255</td>
<td align="center">10.0.0.0/8</td>
<td align="center">apple use this</td>
</tr>

<tr>
<td align="center">20-bit block</td>
<td align="center">172.16.0.0</td>
<td align="center">173.31.255.255</td>
<td align="center">172.16.0.0/12</td>
<td align="center">not many use this</td>
</tr>

<tr>
<td align="center">16-bit block</td>
<td align="center">192.168.0.0</td>
<td align="center">192.168.255.255</td>
<td align="center">192.168.0.0/16</td>
<td align="center">most use this, e.g. asus</td>
</tr>
</tbody>
</table>

<ul>
<li>advantage: good for security, just like a firewall, that is why we may use this even if we will use the IPv6</li>
<li>outside hosts want to communicate with an internal host

<ul>
<li>DDNS</li>
<li>configure NAT translation table in advance (the router would allow you to do that), called port forwarding</li>
</ul></li>
<li><strong>Q: The IP address you find on your iPhone is your smart phone IP address?</strong>

<ul>
<li>A: No. This IP address is assigned by WiFi router, you can dial *3001#12345#* to test for iPhone.</li>
</ul></li>
</ul></li>

<li><p>IPv6</p>

<ul>
<li>differences between IPv4 and IPv6
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-23%20%E4%B8%8B%E5%8D%883.57.12.png" alt=""></figure></li>
<li>motivations

<ul>
<li>to solve the IPv4 address space shortage problem</li>
<li>to speed up packet processing/forwarding (by flow label)</li>
<li>to facilitate QoS</li>
</ul></li>
<li>transition from IPv4 to IPv6

<ul>
<li>use tunneling: IPv6 datagram carried as payload in IPv4 datagram among IPv4 routers
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-23%20%E4%B8%8B%E5%8D%884.35.20.png" alt=""></figure></li>
<li>set the value of upper layer protocol (in IPv4 header) is 41, making routers know IPv4 datagram is covered by IPv6 datagram</li>
<li>problems

<ul>
<li>more overhead</li>
<li>packets would be too big and fragmentated by router

<ul>
<li>consider the maximum length of Ethernet frame is 1500 bytes</li>
</ul></li>
</ul></li>
<li>example
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-23%20%E4%B8%8B%E5%8D%884.42.29.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul>

<h2 id="routing">Routing</h2>

<p><strong>Classification overview</strong>
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%882.42.29.png" alt=""></figure></p>

<p><strong>Link-state routing</strong></p>

<ul>
<li>net topology, link costs known to all nodes

<ul>
<li>via &quot;link state broadcast&quot;, each router knows its neighbours by configuration</li>
<li>all nodes have same info</li>
</ul></li>
<li>each node computes its shortest paths to all other nodes using Dijkstra's algorithm

<ul>
<li>based on the shortest paths found, configure the local forwarding table</li>
</ul></li>
<li>OSPF (open shortest path first)

<ul>
<li>open: publicly available (cisco may monopoly the market in the past)</li>
<li>link state routing

<ul>
<li>LS packet dissemination</li>
<li>topology map at each other</li>
<li>route computation using Dijkstra's algorithm</li>
</ul></li>
<li>OSPF advertisement message carries one entry per neighbour</li>
<li>advertisement flooded to entire network

<ul>
<li>directly over IP (rather than TCP or UDP) with &quot;upper layer = 89&quot;</li>
</ul></li>
<li>reliability (although use IP)

<ul>
<li>by retransmission, just like DNS</li>
</ul></li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%883.38.18.png" alt=""></figure></p>

<p><strong>Distance vector routing</strong></p>

<ul>
<li>distance = hop count</li>
<li>vector = next hop</li>
<li>by periodically exchanging distance vectors (DVs) with neighbours, each router knows neighbours' distance to destinations</li>
<li>each router uses Bellman-Ford algorithm to refine its own DVs.

<ul>
<li>e.g., using neighbour with the shortest distance to a destination as next hop</li>
<li>&quot;routing by rumors&quot;
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%883.36.25.png" alt=""></figure></li>
</ul></li>
<li>LS vs DV

<ul>
<li>LS has the global topology and information, and each router calculate the ways by themselves</li>
<li>DV just trust others, they share the information with each other, each router just knows their neighbours know</li>
<li>the result may be same</li>
<li>message complexity

<ul>
<li>LS: with n nodes &amp; E links, O(nE) messages sent</li>
<li>DV: exchange between neighbours only</li>
</ul></li>
<li>speed of convergence

<ul>
<li>LS: relatively fast</li>
<li>DV: convergence time varies</li>
</ul></li>
<li>robustness

<ul>
<li>LS: node can advertise incorrect link cost, but each node computes only its own table</li>
<li>DV: node can advertise incorrect path cost, each node's table just trust and use it (error propagation)</li>
</ul></li>
</ul></li>
<li>RIP (routing information protocol)

<ul>
<li>distance metric: the number of hops (max = 15), each link has cost 1</li>
<li>DVs exchanged with neighbours every 30 sec in advertisement messages</li>
<li>advertisements sent in UDP segments</li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%887.40.46.png" alt=""></figure></p>

<p><strong>Hierarchical routing</strong></p>

<ul>
<li>aggregate routers into regions, called &quot;autonomous systems&quot; (AS)

<ul>
<li>each AS is assigned a unique AS number (16 bits, but change to 32 bits today, due to shortage)</li>
<li>routers in same AS run same routing protocol

<ul>
<li>&quot;intra-AS&quot; routing protocol, e.g. OSPF, RIP</li>
<li>routers in different AS can run different intra-AS routing protocol</li>
</ul></li>
<li>ASes must be interconnected via gateway routers</li>
<li>forwarding table configured by both intra- and inter-AS routing algorithm

<ul>
<li>intra-AS sets entries for internal dests</li>
<li>inter-AS &amp; intra-AS sets entries for external dests</li>
<li>for multiple ASes, we can use hot potato routing (shorest way) or obey the policy (e.g. content provider), etc.</li>
<li>two layers is enough, but in the future, it is hard to say</li>
</ul></li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%887.58.59.png" alt=""></figure></p>

<ul>
<li><p>BGP (border gateway protocol)</p>

<ul>
<li>may be version 4</li>
<li>glue that holds the Internet/ASes together</li>
<li>tasks

<ul>
<li>for outbound traffic (how to find suitable way to other ASes)

<ul>
<li>obtain subnet reachability information from neighbouring ASes</li>
<li>propagate reachability information to all AS-internal routers</li>
<li>determine good routers to other networks based on reachability information and policy</li>
</ul></li>
<li>for inbound traffic

<ul>
<li>advertise subnets that the AS can help to reach</li>
<li>hosts of outside ASes go to my ASes, make sure hosts of my AS are visible</li>
</ul></li>
</ul></li>

<li><p>BGP session: two BGP routers (&quot;peers&quot;) exchange BGP messages</p>

<ul>
<li>advertising paths to different subnets (&quot;path vector&quot; protocol)</li>
<li>exchange over TCP connections (sever port 179)

<ul>
<li>reliable data transfer</li>
<li>permenant connection, only one overhead</li>
</ul></li>
<li>catagory

<ul>
<li>eBGP (external BGP)

<ul>
<li>logical and TCP connection</li>
<li>direct link</li>
</ul></li>
<li>iBGP (internal BGP)

<ul>
<li>logical and TCP connection</li>
<li>share information (purpose)</li>
</ul></li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%888.31.45.png" alt=""></figure></p>

<ul>
<li>conprehensive example

<ul>
<li>AS3 is willing to carry transit traffic N1: router 3a advertises path (N1, AS3) to router 1c over eBGP session</li>
<li>1c applies its <strong>IMPORT policies</strong> to decide whether it wants to forward packets to N1 via 3a

<ul>
<li>if yes, forwarding table in 1c is updated to indicate 3a as the next-hop for N1</li>
</ul></li>
<li>based on its <strong>EXPORT policies</strong>, assume AS1 is willing to carry transit traffic (from other ASes) to N1 (if AS3 is AS1 customer)</li>
<li>AS1 advertise path (N1, AS3, AS1) to AS2 via eBGP session. (note: 1b receives path (N1, AS3) from 1c via iBGP session)
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%888.51.46.png" alt=""></figure></li>
</ul></li>
<li>elimination rules

<ul>
<li>local preference (LOCAL_PREF) value attribute: policy decision</li>
<li>shortest AS-PATH: AS hops rather than router hops</li>
<li>closest NEXT-HOP router: hot potato routing</li>
<li>additional criteria: backbone, Tier-1 ISP, etc.</li>
</ul></li>
</ul></li>
</ul></li>
</ul>

<h2 id="internet-control-message-protocol-icmp">Internet Control Message Protocol (ICMP)</h2>

<p><strong>Overview</strong></p>

<ul>
<li>mainly focus on error reporting (also echo request/reply by ping)
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%889.17.42.png" alt=""></figure></li>
<li>network-layer above IP

<ul>
<li>upper layer protocol = 1</li>
</ul></li>
<li>ICMP message: type and code
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%889.16.08.png" alt=""></figure></li>
</ul>

<p><strong>Traceroute and ICMP</strong></p>

<ul>
<li>source sends three UDP segments to dest

<ul>
<li>first set has TTL = 1</li>
<li>second set has TTL = 2, etc.</li>
<li>unlikely port number (very likely no specific ports in the dest)</li>
</ul></li>
<li>when nth set of datagrams arrives to nth router

<ul>
<li>router discards datagrams</li>
<li>and sends source ICMP messages (type 11, code 0)</li>
<li>ICMP messages includes name of router &amp; IP address</li>
</ul></li>
<li>when ICMP messages arrive, source records RTTs</li>
<li>stopping criteria

<ul>
<li>UDP segment eventually arrives at destination host</li>
<li>destination returns ICMP &quot;port unreachable&quot; message (type 3, code 3)</li>
<li>source stops</li>
</ul></li>
</ul>

<h2 id="datacenter-networks">Datacenter Networks</h2>

<p><strong>Load balancer: application-layer routing</strong></p>

<ul>
<li>receives external client requests</li>
<li>directs workload within datacenter

<ul>
<li>datacenter TCP (specifically)</li>
</ul></li>
<li>returns results to external client (hiding datacenter internals from client)</li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-24%20%E4%B8%8B%E5%8D%889.33.06.png" alt=""></figure></p>
]]></content>
        </item>
        
        <item>
            <title>ICOM6045 Cryptography</title>
            <link>https://www.marshalgao.com/icom6045-cryptography/</link>
            <pubDate>Tue, 20 Oct 2020 23:12:13 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/icom6045-cryptography/</guid>
            <description>Overview Security threats (explain basically)
 content  eavesdropping: the message would be listened by others when you communicate with your friends, using email or whatsapp masquerading: identity stealing message tampering: someone modify the message in the middle replaying: receive the same message twice, it is dangerous in transactions, but not in instant message, etc  machine  infiltration: receive marewares (can control PC or smart phones) from hackers  traffic  traffic analysis: only interestes in how to communicate denial of service: make others cannot access the services   Security services (implemented by security mechanisms)</description>
            <content type="html"><![CDATA[<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/Cryptography.png" alt=""></figure></p>

<h2 id="overview">Overview</h2>

<p><strong>Security threats (explain basically)</strong></p>

<ul>
<li>content

<ul>
<li>eavesdropping: the message would be listened by others when you communicate with your friends, using email or whatsapp</li>
<li>masquerading: identity stealing</li>
<li>message tampering: someone modify the message in the middle</li>
<li>replaying: receive the same message twice, it is dangerous in transactions, but not in instant message, etc</li>
</ul></li>
<li>machine

<ul>
<li>infiltration: receive marewares (can control PC or smart phones) from hackers</li>
</ul></li>
<li>traffic

<ul>
<li>traffic analysis: only interestes in how to communicate</li>
<li>denial of service: make others cannot access the services</li>
</ul></li>
</ul>

<p><strong>Security services (implemented by security mechanisms)</strong></p>

<ul>
<li>security policy

<ul>
<li>from risk analysis, we can have some security policies to deal with</li>
<li>may not cover all possible risks, should have a reasonable trade-off between risks and available resources</li>
</ul></li>
<li>ISO security architecture

<ul>
<li>authentication</li>
<li>access control</li>
<li>data confidentiality</li>
<li>data integrity</li>
<li>nonrepudiation</li>
</ul></li>
<li>basic computer security concepts (CIA)

<ul>
<li>related to cryptography

<ul>
<li>confidentiality: prevent unauthorized access</li>
<li>integrity: prevent unauthorized modification</li>
</ul></li>
<li>related to access control

<ul>
<li>availability: prevent unauthorized withholding of information or resources</li>
<li>authenticity: verify the origin of data</li>
<li>accountability: audit information and trace to the responsible party if there are security issues</li>
</ul></li>
</ul></li>
</ul>

<h2 id="encryption-and-decryption-focus-on-classical-ones">Encryption and Decryption (focus on classical ones)</h2>

<p><strong>Types (still use today)</strong></p>

<ul>
<li>symmetric key encryption (single key cryptosystem)

<ul>
<li>using the same encryption and decryption key

<ul>
<li>e.g. AES, 3DES, RC4, pdf password</li>
</ul></li>
<li>usage:

<ul>
<li>file encryption</li>
<li>others with lots of data</li>
</ul></li>
<li>rely on substitution and permutation, do not need to much computing</li>
</ul></li>

<li><p>public key encryption (two key cryptosystem)</p>

<ul>
<li>using different encryption and decryption keys

<ul>
<li>public key (encryption key): everyone knows it</li>
<li>private key (decryption key): only I know</li>
<li>e.g. RSA (still popular today)</li>
</ul></li>
<li>usage:

<ul>
<li>communication</li>
<li>digital signature</li>
<li>others not cover lots of data</li>
</ul></li>
<li>rely on complex math, need much computing</li>
</ul>

<p><strong>if you use the e-banking system or https, you should use both of them</strong></p></li>
</ul>

<p><strong>Monoalphabetic substitutions</strong></p>

<ul>
<li>concept

<ul>
<li>substitution: each letter is substituted by another one</li>
<li>permutation: reorder the elements of a series</li>
</ul></li>
<li>caesar cipher

<ul>
<li>each letter is translated to the letter a fixed number of letters after it in the alphabet

<ul>
<li>Julius Caesar used a shift of 3</li>
</ul></li>
<li>attack (short message)

<ul>
<li>find the similarity of ciphertext (e.g. &quot;wr&quot; means &quot;to&quot; -&gt; &quot;wrr&quot; means &quot;too&quot;)</li>
<li>guess the pattern(the number of shifting)</li>
</ul></li>
</ul></li>
<li>cryptanalysis (mainly for long message)

<ul>
<li>count the frequency of the letter, find the difference according to the frequency of normal articles</li>
<li>weakness: the frequency of distribution reflects the distribution of the underlying alphabet

<ul>
<li>make it stronger -&gt; polyalphabetic substitution ciphers

<ul>
<li>using combine or multiple distributions -&gt; different tables</li>
<li>if you use 2 tables, it is not safe (if someone can guess the tables)</li>
<li>26 tables may be safer, but it is difficult to maintain

<ul>
<li>solution (vigenere cipher): use a keyword (not be encrypted, but use different method or channel), letters in the key will be used to select a particular permutation (e.g. juliet, which needs to be repeated)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>

<li><p>index of coincidence</p>

<ul>
<li><p>a measure of the variation between frequencies in a distribution (n is the number of ciphertext)</p>

<p><span  class="math">\[IC=\sum_{i=a}^{i=z}\frac{Freq(i)\times(Freq(i)-1)}{n\times(n-1)}\]</span></p></li>

<li><p>IC ranges from 0.0384 (polyalphabetic substitution with perfectly flat distribution) to 0.068(monoalphabetic substitution from common English)</p>

<table>
<thead>
<tr>
<th align="center">Alphabets</th>
<th align="center">IC</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">1</td>
<td align="center">0.068</td>
</tr>

<tr>
<td align="center">2</td>
<td align="center">0.052</td>
</tr>

<tr>
<td align="center">3</td>
<td align="center">0.047</td>
</tr>

<tr>
<td align="center">4</td>
<td align="center">0.044</td>
</tr>

<tr>
<td align="center">5</td>
<td align="center">0.044</td>
</tr>

<tr>
<td align="center">10</td>
<td align="center">0.041</td>
</tr>

<tr>
<td align="center">large</td>
<td align="center">0.038</td>
</tr>
</tbody>
</table></li>

<li><p>the value of IC</p>

<ul>
<li>close to or above 0.068 -&gt; monoalphabetic substitution</li>
<li>close to or below 0.038 -&gt; polyalphabetic substitution</li>
</ul></li>

<li><p>kasiski method: determine when a pattern of encrypting permutations has repeated to predict the number of alphabets used for substitutions</p>

<ul>
<li>search for repeated sequence of characters</li>
<li>calculate the distance between each two of them</li>
<li>the estimated key length is the common divisor</li>
</ul></li>
</ul></li>

<li><p>analyze polyalphabetic cipher</p>

<ul>
<li>use the kasiski method to predict likely numbers of enciphering alphabets</li>
<li>if no numbers emerge fairly regularly, the encryption is not probably not a polyalphabetic substitution</li>
<li>divide the ciphertext into serval sequences, according to the key length</li>
<li>calculate IC for each sequence</li>
</ul></li>
</ul>

<p><strong>The &quot;perfect&quot; substitution cipher</strong></p>

<ul>
<li>use infinite or a large nonrepeating keys

<ul>
<li>problems<br>

<ul>
<li>absolute synchronization between sender and receiver, difficult to distribute</li>
<li>need an unlimited number of keys</li>
</ul></li>
</ul></li>

<li><p>vernam cipher</p>

<ul>
<li>use random number as the key</li>

<li><p>e.g.</p>

<table>
<thead>
<tr>
<th align="center">plaintext</th>
<th align="center">V</th>
<th align="center">E</th>
<th align="center">R</th>
<th align="center">N</th>
<th align="center">A</th>
<th align="center">M</th>
<th align="center">C</th>
<th align="center">I</th>
<th align="center">P</th>
<th align="center">H</th>
<th align="center">E</th>
<th align="center">R</th>
</tr>
</thead>

<tbody>
<tr>
<td align="center">encoded</td>
<td align="center">21</td>
<td align="center">4</td>
<td align="center">17</td>
<td align="center">13</td>
<td align="center">0</td>
<td align="center">12</td>
<td align="center">2</td>
<td align="center">8</td>
<td align="center">15</td>
<td align="center">7</td>
<td align="center">4</td>
<td align="center">17</td>
</tr>

<tr>
<td align="center">random</td>
<td align="center">76</td>
<td align="center">48</td>
<td align="center">16</td>
<td align="center">82</td>
<td align="center">33</td>
<td align="center">3</td>
<td align="center">58</td>
<td align="center">11</td>
<td align="center">60</td>
<td align="center">5</td>
<td align="center">48</td>
<td align="center">88</td>
</tr>

<tr>
<td align="center">sum</td>
<td align="center">97</td>
<td align="center">52</td>
<td align="center">33</td>
<td align="center">95</td>
<td align="center">33</td>
<td align="center">15</td>
<td align="center">60</td>
<td align="center">19</td>
<td align="center">75</td>
<td align="center">12</td>
<td align="center">52</td>
<td align="center">105</td>
</tr>

<tr>
<td align="center">mod 26</td>
<td align="center">19</td>
<td align="center">0</td>
<td align="center">7</td>
<td align="center">17</td>
<td align="center">18</td>
<td align="center">15</td>
<td align="center">8</td>
<td align="center">19</td>
<td align="center">23</td>
<td align="center">12</td>
<td align="center">0</td>
<td align="center">1</td>
</tr>

<tr>
<td align="center">ciphertext</td>
<td align="center">T</td>
<td align="center">A</td>
<td align="center">H</td>
<td align="center">R</td>
<td align="center">S</td>
<td align="center">P</td>
<td align="center">I</td>
<td align="center">T</td>
<td align="center">X</td>
<td align="center">M</td>
<td align="center">A</td>
<td align="center">B</td>
</tr>
</tbody>
</table></li>

<li><p>possible attack</p>

<ul>
<li>random number generator</li>
<li>most common type of random number generator: linear congruential random number generator</li>
<li>seed: the initial value <span  class="math">\(r_0\)</span></li>

<li><p>successive random number <span  class="math">\(r_{i+1}\)</span></p>

<p><span  class="math">\[r_{i+1}=(a\times r_i+b)\mod\ n\]</span></p>

<ul>
<li>if someone knows a, b and n, he or she can use the current random number to calculate the next random number</li>
</ul></li>

<li><p>cracking the random number generator becomes solving a systems of equations</p></li>
</ul></li>
</ul></li>
</ul>

<p><strong>Permutations (transpositions)</strong></p>

<ul>
<li>rearrange the symbols of a message and try to break established patterns

<ul>
<li>columnar transposition: rearrangement of the characters of the plaintext into columns

<ul>
<li>e.g. THIS IS A MESSAGE TO SHOW HOW A COLUMN TRANSPOSITION WORKS
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-21%20%E4%B8%8B%E5%8D%888.17.38.png" alt=""></figure></li>
<li>cryptanalysis

<ul>
<li>compute the letter frequencies: all letters appear with their normal frequencies implies that a transposition has been performed</li>
<li>break the text into columns by compare a block of ciphertext characters against characters successively farther away in the ciphertext</li>
</ul></li>
</ul></li>
</ul></li>
<li>complexity

<ul>
<li>the execution time of the algorithm is proportional to the length of the message</li>
<li>store all characters</li>
<li>output cannot be generated until all characters have been read (not good for long message)</li>
</ul></li>
<li>alternative method: permute the characters of the plaintext with a fixed period d

<ul>
<li>e.g. d = 5, and the permutation is (2 4 5 1 3)
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-21%20%E4%B8%8B%E5%8D%888.18.14.png" alt=""></figure></li>
</ul></li>
</ul>

<p><strong>Confusion and Diffusion</strong></p>

<ul>
<li>confusion: change symbols

<ul>
<li>bad confusion: caesar cipher</li>
<li>good confusion: polyalphabetic substitution with a long key</li>
</ul></li>
<li>diffusion: change order

<ul>
<li>bad diffusion: the substitution ciphers</li>
<li>good diffusion: the transposition ciphers</li>
</ul></li>
<li>DES provides good confusion and diffusion

<ul>
<li>substitution provides confusion</li>
<li>permutation provides diffusion</li>
</ul></li>
<li>purpose of cryptography -&gt; data confidentiality
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-21%20%E4%B8%8B%E5%8D%889.25.17.png" alt=""></figure></li>
</ul>

<p><strong>Ciphers</strong></p>

<ul>
<li>stream cipher: convert one symbol of plaintext immediately into a symbol of ciphertext, e.g. the substitution cipher

<ul>
<li>advantages:

<ul>
<li>speed of transformation</li>
<li>low error propagation: each symbol is separately encoded</li>
</ul></li>
<li>disadvantages:

<ul>
<li>low diffusion: all information of a symbol is contained in the symbol, subject to attack like frequency count, digram analysis, IC and Kasiski method</li>
<li>possible for malicious insertions and modifications</li>
</ul></li>
</ul></li>
<li>block cipher: encrypt a group of plaintext symbol as one block, e.g. the columnar transposition cipher

<ul>
<li>advantages:

<ul>
<li>diffusion: information of plaintext is diffused into several ciphertext symbols</li>
<li>immunity to insertions: impossible to insert a single symbol in a block</li>
</ul></li>
<li>disadvantages:

<ul>
<li>slowness of encryption</li>
<li>error propagation: an error will affect all other characters in the same block</li>
</ul></li>
</ul></li>
</ul>

<p><strong>Rotor Machine</strong></p>

<ul>
<li>contains three rotors (key)</li>
<li>is implemented by polyalphabetic substitution (not fixed substitution)

<ul>
<li>change one position, change the key</li>
<li>the number of keys is <span  class="math">\({26}^3\)</span></li>
</ul></li>
<li>procedure

<ul>
<li>use original setting to do substitution</li>
<li>after one input, the next input may generate the rotation of the first rotor (one position)</li>
<li>if the first rotor rotates a cirle, jump to the second rotor</li>
<li>after one input, the next input may generate the rotation of the second rotor (one position)</li>
<li>until three rotors finish their rotation -&gt; original status -&gt; again and again</li>
</ul></li>
<li>utility: enigma machine (by German, with a 256-element rotor, use all rotors twice for each letter)</li>
<li>example
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-23%20%E4%B8%8A%E5%8D%8812.54.53.png" alt=""></figure></li>
</ul>

<h2 id="modern-cryptography">Modern Cryptography</h2>

<p><strong>DES (data encryption standard)</strong></p>

<ul>
<li>a block cipher with 56-bit key (64-bit including parity bits), 64-bit block

<ul>
<li>the reason for 64-bit: 64-bit is 8 bytes, each character uses 1 byte in the computer, 8 characters means we can use ascii code to represent</li>
<li>parity bits: just like checksum, solving the nosie problem, but today we may not use this
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-27%20%E4%B8%8A%E5%8D%889.54.30.png" alt=""></figure></li>
</ul></li>
<li>most commonly use block cipher

<ul>
<li>in 1990s, this method was not safe any more, then generate &quot;triple DES&quot; (1999) and AES (2001, use until now)</li>
<li>3-DES

<ul>
<li>still use today, but someone thinks out of date</li>
<li>use this method due to orginial DES hardware can be used (save money)
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/IMG_0019.jpg" alt=""></figure></li>
</ul></li>
</ul></li>
<li>based on &quot;Feistel&quot; network structure

<ul>
<li>means for both encryption and decryptionn use the same hardware (box)</li>
<li>DES use this structure for 16 times, but using different subkeys

<ul>
<li>method, ciphertext, etc. are public, but you cannot decrpyt it (due to lots of substitution and permutation)</li>
</ul></li>
<li>mathmatics

<ul>
<li><span  class="math">\(L_{i+1}=R_i\)</span></li>
<li><span  class="math">\(R_{i+1}=L_i\bigoplus f(K_i,R_i)\)</span></li>
<li>inverse is the same

<ul>
<li><span  class="math">\(R_i=L_{i+1}\)</span></li>
<li><span  class="math">\(L_i=R_{i+1}\bigoplus f(K_i,L_{i+1})\)</span></li>
</ul></li>
<li>f function
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-27%20%E4%B8%8A%E5%8D%889.54.53.png" alt=""></figure>

<ul>
<li>S-Box

<ul>
<li>public</li>
<li>fixed (6 bits -&gt; 4 bits)</li>
<li>design criteria (early undisclosed)

<ul>
<li>the S-boxes were carefully tuned to increase resistance against differential cryptanalysis</li>
<li>no S-box is a linear or affine function of its input: the 4 output bits cannot be expressed as a system of linear equations of the 6 input bits</li>
<li>changing 1 bit in the input of an S-box results in changing at least 2 output bits: the S-boxes diffuse their information well throughout their outputs</li>
<li>the S-boxes were chosen to minimize the difference between the number of 1s and 0s when any single input bit is held constant: holding a single bit constant as a 0 or 1 and changing the bits around it should not lead to disproportionately many 0s or 1s in the output
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-27%20%E4%B8%8A%E5%8D%8810.11.54.png" alt=""></figure></li>
</ul></li>
</ul></li>
<li>P-Box

<ul>
<li>public</li>
<li>fixed
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-27%20%E4%B8%8A%E5%8D%8810.12.12.png" alt=""></figure></li>
</ul></li>
<li>the only secret is the key, without it, you cannot decrypt the ciphertext

<ul>
<li>but it is not safe now, due to computing power (only <span  class="math">\(2^{56}\)</span> possible keys)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li>designed to facilitate hardware implementation</li>
</ul>

<p><strong>AES (advanced encryption standard)</strong></p>

<ul>
<li>mandates a block size of 128 bits and a choice of key size from 128, 192, 256 bits (called AES-128, AES-192, AES-256)

<ul>
<li>using 128-bit key (16 bytes, 4 4-octet)
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-27%20%E4%B8%8A%E5%8D%8811.11.06.png" alt=""></figure></li>
</ul></li>
<li>diffusion and confusion

<ul>
<li>diffusion: by permutations in ShiftRows and MixColumns</li>
<li>Confusion: by substitutions (S-Box) in SubBytes
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-27%20%E4%B8%8A%E5%8D%8811.11.22.png" alt=""></figure></li>
</ul></li>
</ul>

<p><strong>Hash</strong></p>

<ul>
<li>cryptographic hash function

<ul>
<li>compression: for any size of input x, the output length of y = h(x) is small</li>
<li>features

<ul>
<li>efficiency: easy to compute h(x) for any input x</li>
<li>one-way: given any value y, it is computationally infeasible to find a value x such that h(x) = y</li>
<li>collision resistance

<ul>
<li>given x and h(x), if is infeasible to find y ≠ x such that h(x) = h(y)</li>
<li>it is infeasible to find x and y, with y ≠ x, such that h(x) = h(y)</li>
</ul></li>
</ul></li>
<li>common hash functions: MD5, SHA-1, SHA-256

<ul>
<li>basic structure of SHA-1

<ul>
<li>split message into 512-bit blocks</li>
<li>the former result would be the next input</li>
<li>if the memory is spare, padding
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E5%9B%BE%E7%89%87%201.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul></li>
<li>HMAC (hash message authentication code)

<ul>
<li>today, we use digital signature to verfity identity</li>
<li>in old days, we uese HMAC to verify indentity
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/IMG_0020.jpg" alt=""></figure></li>
<li>the use of a shared secret key that provides authentication in addition to integrity protection</li>
<li>features

<ul>
<li>faster than encryption in software</li>
<li>use of any hash function is permitted in any export product from US</li>
<li>used in IPsec and TLS
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E5%9B%BE%E7%89%87%202.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>产品经理JD汇总——广告方向</title>
            <link>https://www.marshalgao.com/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86jd%E6%B1%87%E6%80%BB%E5%B9%BF%E5%91%8A%E6%96%B9%E5%90%91/</link>
            <pubDate>Tue, 20 Oct 2020 16:42:50 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86jd%E6%B1%87%E6%80%BB%E5%B9%BF%E5%91%8A%E6%96%B9%E5%90%91/</guid>
            <description>Tencent 腾讯音乐广告平台高级产品经理
 工作职责  负责广告平台产品能力建设，包括投放平台、媒体管理平台、CRM系统、排期系统等模块 关注行业发展，有大局观和行业前瞻性，对广告平台做方向性规划和建设 熟悉媒体产品变现，对数据敏感，通过数据分析，优化广告平台的整体变现效率 理解市场需求，为外部客户和内部成员提供标准化的平台服务能力 与开发、测试、平台产品、运营等配合方协同合作，保证产品能力落地   工作要求  本科或以上学历，5年以上互联网工作经验，3年以上广告平台工作经验 熟悉广告系统，能独立完整广告平台的功能策划，并执行落地 执行力强，思路清晰，较强数据分析能力和逻辑思维能力 有一定的行业洞察，有钻研精神，能结合业务前景提出创新方向    互娱广告产品经理
 工作职责  负责腾讯游戏广告优化业务，通过产品、算法、技术、运营等手段，落地优化广告效果，为广告优化指标负责 负责腾讯游戏精准广告平台的产品策划和运营工作，通过产品迭代优化广告效果，广告形式包括但不限于合约广告、竞价广告、搜索广告等 负责研究腾讯游戏广告采买的优化措施，了解并挖掘买量市场的新模式或新技术，进行可行性分析并组织落地   工作要求  精通流量获取的各种手段，有相关的成功经验 精通广告行业，对各种广告类型的运作模式和优化手段有成功经验 优秀的产品策划和运营能力，了解互联网技术和算法优化原理，能与技术团队无缝沟通 扎实的数据分析基础和数据驱动意识，优秀的沟通能力和项目推进能力 有其他广告平台（ADX或DSP平台）从业经验者优先    腾讯广告Q系流量商业化产品经理
 工作职责  负责腾讯QQ、TME广告产品商业化，通过广告策略优化、产品展示形态、交互逻辑创新，广告SDK组件能力设计与升级实现产品广告变现水平提升 社交元素与广告相融合，优化广告转化路径，提升用户体验和广告转化效率 跟踪新产品形态在广告系统各项核心指标表现情况，并结合对创新互联网技术和行业趋势的理解，快速优化产品方向，制定有针对性的产品策划方案 调研竞品广告策略产品和客户需求，结合数据分析、市场分析负责最终的广告产品设计、策略并推动上线   工作要求  本科及以上学历，计算机、理工科相关专业 3年以上互联网商业产品、策略产品或数据产品经验 对数字敏感，关注数据分析，能通过数据现象深挖问题本质，形成优化建议 产品形态设计有独立思考判断，注重用户体验细节 能熟练运用Axure、Photoshop等UI构图工具绘制产品原型图 具备良好的沟通能力，逻辑清晰、条理性好； 具备良好的自我驱动和管理意识，抗压力强    中央信息库内容中台产品经理
 工作职责  负责中央音乐曲库、版权库、版权自助分发平台等内容后台的整体架构和规划设计，从效率、质量、结构化管理多角度优化业务流程，提高业务效率 负责曲库、视频库智能生产和分发建设，包括创作中心、质量体系、AI标引，分发提效等等内容管理平台艰涩建设 研究行业产品发展趋势，结合音乐发展情况，探索内容相关的新业务方向，推动相应的产品落地 跨部门协调和沟通，BU曲库、版权部门等紧密合作达成产品目标，并对产品的全生命周期负责   工作要求  本科以上学历，5年B端产品经验。有架构过大型业务后台经验者优先 文娱视野开阔，能把握行业发展趋势、具备较强的行业产品和创新业务的产品化开拓 出色的产品设计能力，对文娱内容管理、资产管理、创作和分发、标签结构分发等方向有产品落地经验，中台产品建设能力优先 良好的协调推进能力，能很好的跨团队协作，驱动不同团队角色完成工作 具有较强的管理、学习能力和优秀的逻辑思考能力 热爱音乐    腾讯广告高级创意产品经理</description>
            <content type="html"><![CDATA[<h2 id="tencent">Tencent</h2>
<p><strong>腾讯音乐广告平台高级产品经理</strong></p>
<ul>
<li>工作职责
<ul>
<li>负责广告平台产品能力建设，包括投放平台、媒体管理平台、CRM系统、排期系统等模块</li>
<li>关注行业发展，有大局观和行业前瞻性，对广告平台做方向性规划和建设</li>
<li>熟悉媒体产品变现，对数据敏感，通过数据分析，优化广告平台的整体变现效率</li>
<li>理解市场需求，为外部客户和内部成员提供标准化的平台服务能力</li>
<li>与开发、测试、平台产品、运营等配合方协同合作，保证产品能力落地</li>
</ul>
</li>
<li>工作要求
<ul>
<li>本科或以上学历，5年以上互联网工作经验，3年以上广告平台工作经验</li>
<li>熟悉广告系统，能独立完整广告平台的功能策划，并执行落地</li>
<li>执行力强，思路清晰，较强数据分析能力和逻辑思维能力</li>
<li>有一定的行业洞察，有钻研精神，能结合业务前景提出创新方向</li>
</ul>
</li>
</ul>
<p><strong>互娱广告产品经理</strong></p>
<ul>
<li>工作职责
<ul>
<li>负责腾讯游戏广告优化业务，通过产品、算法、技术、运营等手段，落地优化广告效果，为广告优化指标负责</li>
<li>负责腾讯游戏精准广告平台的产品策划和运营工作，通过产品迭代优化广告效果，广告形式包括但不限于合约广告、竞价广告、搜索广告等</li>
<li>负责研究腾讯游戏广告采买的优化措施，了解并挖掘买量市场的新模式或新技术，进行可行性分析并组织落地</li>
</ul>
</li>
<li>工作要求
<ul>
<li>精通流量获取的各种手段，有相关的成功经验</li>
<li>精通广告行业，对各种广告类型的运作模式和优化手段有成功经验</li>
<li>优秀的产品策划和运营能力，了解互联网技术和算法优化原理，能与技术团队无缝沟通</li>
<li>扎实的数据分析基础和数据驱动意识，优秀的沟通能力和项目推进能力</li>
<li>有其他广告平台（ADX或DSP平台）从业经验者优先</li>
</ul>
</li>
</ul>
<p><strong>腾讯广告Q系流量商业化产品经理</strong></p>
<ul>
<li>工作职责
<ul>
<li>负责腾讯QQ、TME广告产品商业化，通过广告策略优化、产品展示形态、交互逻辑创新，广告SDK组件能力设计与升级实现产品广告变现水平提升</li>
<li>社交元素与广告相融合，优化广告转化路径，提升用户体验和广告转化效率</li>
<li>跟踪新产品形态在广告系统各项核心指标表现情况，并结合对创新互联网技术和行业趋势的理解，快速优化产品方向，制定有针对性的产品策划方案</li>
<li>调研竞品广告策略产品和客户需求，结合数据分析、市场分析负责最终的广告产品设计、策略并推动上线</li>
</ul>
</li>
<li>工作要求
<ul>
<li>本科及以上学历，计算机、理工科相关专业</li>
<li>3年以上互联网商业产品、策略产品或数据产品经验</li>
<li>对数字敏感，关注数据分析，能通过数据现象深挖问题本质，形成优化建议</li>
<li>产品形态设计有独立思考判断，注重用户体验细节</li>
<li>能熟练运用Axure、Photoshop等UI构图工具绘制产品原型图</li>
<li>具备良好的沟通能力，逻辑清晰、条理性好； 具备良好的自我驱动和管理意识，抗压力强</li>
</ul>
</li>
</ul>
<p><strong>中央信息库内容中台产品经理</strong></p>
<ul>
<li>工作职责
<ul>
<li>负责中央音乐曲库、版权库、版权自助分发平台等内容后台的整体架构和规划设计，从效率、质量、结构化管理多角度优化业务流程，提高业务效率</li>
<li>负责曲库、视频库智能生产和分发建设，包括创作中心、质量体系、AI标引，分发提效等等内容管理平台艰涩建设</li>
<li>研究行业产品发展趋势，结合音乐发展情况，探索内容相关的新业务方向，推动相应的产品落地</li>
<li>跨部门协调和沟通，BU曲库、版权部门等紧密合作达成产品目标，并对产品的全生命周期负责</li>
</ul>
</li>
<li>工作要求
<ul>
<li>本科以上学历，5年B端产品经验。有架构过大型业务后台经验者优先</li>
<li>文娱视野开阔，能把握行业发展趋势、具备较强的行业产品和创新业务的产品化开拓</li>
<li>出色的产品设计能力，对文娱内容管理、资产管理、创作和分发、标签结构分发等方向有产品落地经验，中台产品建设能力优先</li>
<li>良好的协调推进能力，能很好的跨团队协作，驱动不同团队角色完成工作</li>
<li>具有较强的管理、学习能力和优秀的逻辑思考能力</li>
<li>热爱音乐</li>
</ul>
</li>
</ul>
<p><strong>腾讯广告高级创意产品经理</strong></p>
<ul>
<li>工作职责
<ul>
<li>负责腾讯广告创意工具的产品策划工作，包括但不限于图片/视频/文案/落地页制作等各类工具</li>
<li>洞察广告创意链条用户痛点，快速高效推进创意平台产品能力建设</li>
<li>对接行业和运营，分析创意产品能力在各行业的诉求、使用情况、推广策略，反哺产品功能设计与迭代节奏</li>
<li>紧跟行业前沿，大胆探索广告创意能力</li>
</ul>
</li>
<li>工作要求
<ul>
<li>两年以上工作经验，有创意工具、商业化平台相关产品经验者优先</li>
<li>了解广告创意领域，理解创意和广告的关系，有创意优化思路和见解</li>
<li>思维敏捷开阔，有创新意识，追踪业界热点和前沿动态</li>
<li>具备一定统筹能力，善于跨部门沟通，能主动协调资源驱动目标达成</li>
<li>较强的逻辑思维能力，抗压力强，责任心强</li>
</ul>
</li>
</ul>
<h2 id="alibaba">Alibaba</h2>
<p><strong>广告机制策略优化专家</strong></p>
<ul>
<li>岗位描述：
<ul>
<li>负责ICBU业务的商业广告策略产品工作，对效果广告的收入和变现效率负责</li>
<li>通过分析数据和买卖家研究，提出算法优化方向，优化流量匹配和投放效率</li>
<li>不断探索新的创造性策略，能用流量及客户生态角度规划和管理产品建设</li>
<li>项目推进和横向管理，推动设计，研发，测试等团队按时完成产品开发、高质量上线</li>
<li>跨部门沟通协作，能高效协同运营，产品，技术等相关团队资源</li>
<li>关注市场动态，了解行业供给和客户需求，将策略产品推广到市场</li>
</ul>
</li>
<li>岗位要求：
<ul>
<li>有3-4年互联网广告经验，了解互联网广告的售卖模式，投放策略和展现逻辑等</li>
<li>有流量产品经验，掌握流量变现优化的方法论，在广告产品形态设计，链路优化中有丰富经验</li>
<li>有较强的学习能力及洞察能力，快速调研和了解市场先进案例，并提出创造性策略</li>
<li>有用户画像挖掘及数据分析相关经验优先，统计学和计算机背景优先</li>
</ul>
</li>
</ul>
<p><strong>国际贸易事业部——高级广告产品专家</strong></p>
<ul>
<li>岗位描述
<ul>
<li>搜索广告变现</li>
<li>推荐广告变现</li>
<li>整体广告策略负责</li>
</ul>
</li>
<li>岗位要求
<ul>
<li>搜索广告变现+信息流广告变现出身</li>
<li>对于广告策略算法，推广平台有5年以上经验和深入理解</li>
<li>对于流量、广告产品设计、运营、到销售有全方位的整体理解</li>
<li>从思考，到项目落地，并且达成收入目标和客户转化目标的整体项目管理能力</li>
</ul>
</li>
</ul>
<p><strong>中台运营事业部——广告产品——互动广告</strong></p>
<ul>
<li>岗位描述
<ul>
<li>负责互动广告机制策略和投放优化，提升搜索广告流量变现效率，赋能客户营销提效</li>
<li>制定和优化商业策略，平衡客户、平台和消费者三者利益，达成商业产品目标</li>
<li>通过客户调研、竞品分析、数据分析，确定产品中长期规划及产品节奏，并落地执行</li>
</ul>
</li>
<li>岗位要求：
<ul>
<li>了解互联网广告，对电商/搜索等行业熟悉，具备5年以上互联网广告工作经历</li>
<li>具备与算法、工程团队顺畅沟通的能力，有成功的与策略机制相关的系统设计和工作经验</li>
<li>优秀的数据分析能力和逻辑思维，善于利用数据驱动需求或指导决策</li>
<li>熟悉互联网开发模式和商业变现模式，有从需求分析、产品研究、数据分析、产品迭代的全周期实践经验，对用户体验和客户需求有把握和权衡能力</li>
<li>具备高度的责任心和较强的自我驱动力、抗压能力，善于合作，善于协调和调度资源推动业务发展</li>
</ul>
</li>
</ul>
<p><strong>蚂蚁集团-商业产品专家/高级专家-广告事业部</strong></p>
<ul>
<li>岗位描述
<ul>
<li>探索适合支付宝的营销产品，通过快速迭代实验，找到适合支付宝广告的模式</li>
<li>规划、设计和落地产品原型，效果评估，针对行业特点设计广告优化工具提高持续提升广告效果</li>
<li>规范平台相关各项工作并监督实施，对业务目标和用户体验负责</li>
</ul>
</li>
<li>岗位要求：
<ul>
<li>具备较强的商业sense，能够快速把握用户和客户的痛点，能设计机制平衡各方利益</li>
<li>有很强的创新意识，好奇心极强，并具备实际落地能力</li>
<li>抽象总结能力强，能够透过现象洞察本质</li>
<li>有优秀的沟通和团队合作能力；具备良好的组织、协调、沟通能力，善于调动各个相关团队的积极性</li>
</ul>
</li>
</ul>
<p><strong>中台运营事业部——广告产品专家</strong></p>
<ul>
<li>岗位描述
<ul>
<li>负责广告系统的核心能力建设，提升PDB和RTB两条线的流量分发效率</li>
<li>负责广告业务的广告创意管理和媒体对接审核</li>
<li>负责系统整体的平台资源整合和对外开放，提高系统的可扩展性和平台操作效率</li>
</ul>
</li>
<li>岗位要求
<ul>
<li>5年以上互联网广告产品经验，对程序化广告精通，并有过DSP、SSP、ADX相关经验</li>
<li>对广告平台的规划和设计有深入的理解和丰富的实操经验</li>
<li>对媒体APP有广泛的了解</li>
<li>具备高度的责任心和自驱力，协同运营/技术等兄弟团队共同达成目标，推动产品上线至落地，并持续迭代优化</li>
</ul>
</li>
</ul>
<h2 id="bytedance">ByteDance</h2>
<p><strong>广告渠道CRM高级产品经理（优化工具方向）</strong></p>
<ul>
<li>职位描述
<ul>
<li>负责调研、收集、整理广告优化师日常工作场景及需求，并形成分析调研报告，为产品迭代提供有价值的功能规划建议</li>
<li>编写产品规划方案、并组织开展方案讨论、评审工作，为最终的产品上线使用情况负责</li>
<li>基于需求设计，制作产品原型，并负责向ued和rd等项目组成员讲解产品说明文档和原型</li>
<li>负责与技术研发团队紧密配合，推进产品研发，达成产品目标，带领测试人员完成负责模块的测试工作，并做好产品上线验收</li>
<li>调研其他产品的核心功能，对比差异化，形成行业分析文档</li>
<li>参与销售服务等环节的客户拜访工作，更好的评估产品功能成熟度、收集客户其他诉求，为产品迭代、优化做准备</li>
<li>负责对内部销售、服务等人员的产品培训工作</li>
<li>因自有产品扩展涉及到的第三方合作的方案制作及执行过程及结果管理</li>
</ul>
</li>
<li>职位要求
<ul>
<li>本科及以上学历，对互联网行业有较强的理解和知识储备</li>
<li>5年以上产品经验，2年以上互联网广告相关经验，熟悉互联网广告推送逻辑、计费方式、优化办法</li>
<li>有CRM平台经验或广告平台经验者优先</li>
<li>可以用SQL提取数据并进行分析，能够熟练使用Office办公软件，可以灵活使用Axure制作产品原型</li>
<li>具备良好的沟通能力，能够恰当的处理与公司内、客户间不同角色人员的交流</li>
<li>具备较强的理解能力，能够在与各岗位、客户接触过程中，沉淀、整理出有价值的产品信息</li>
</ul>
</li>
</ul>
<p><strong>广告业务平台产品经理</strong></p>
<ul>
<li>职位描述
<ul>
<li>用户需求调研，通过分析企业内部商业广告售卖流程，进行企业内部业务平台整体架构规划设计</li>
<li>整体项目管理，协调相关资源，进行系统整体落地开发、实施、推广</li>
<li>企业信息化及CRM行业研究调研分析</li>
</ul>
</li>
<li>职位要求
<ul>
<li>本科及以上学历，2年及以上信息化或CRM行业咨询经验</li>
<li>具备很强的沟通和自我驱动能力，能够在复杂业务环境下，站在多赢的角度寻求最优的解决方案，并驱动相关人员达成业绩目标</li>
<li>具备很强的学习、思考和总结能力，善于发现和分析整个销售运营体系的优化方向</li>
<li>具备很强的抽象思维能力，善于从多条业务线中抽取共性的需求，搭建平台级的产品</li>
<li>具备很强的数据分析能力，熟练使用定性和定量的调研方法</li>
<li>具有市场研究、行业分析及平台级CRM整体规划架构能力</li>
</ul>
</li>
</ul>
<p><strong>商业平台产品经理（品牌广告方向）</strong></p>
<ul>
<li>职位描述
<ul>
<li>负责品牌广告及内容营销方向的平台产品工作，包括需求分析、功能制定、设计规划、落地上线及优化迭代等</li>
<li>在项目推进过程中协调本部门、跨部门资源，确保项目顺利进行</li>
<li>与运营、销售等团队合作，推动产品相关运营推广工作顺利进行，并结合运营分析和问题收集，制定产品优化方向，推动产品不断迭代</li>
</ul>
</li>
<li>职位要求
<ul>
<li>本科及以上学历，3年以上互联网公司商业产品或平台产品相关经验</li>
<li>了解互联网品牌广告或者移动广告业务，有判断力</li>
<li>拥有较强的项目管理能力和沟通能力，能够把握各方需求</li>
<li>逻辑能力强，能承受工作压力，具有自我管理和时间管理能力</li>
<li>敢于突破创新，积极主动、工作认真，沟通协作能力强，富有团队精神</li>
</ul>
</li>
</ul>
<p><strong>广告平台产品经理</strong></p>
<ul>
<li>职位描述
<ul>
<li>负责自助广告的平台产品工作，包括项目规划、需求落地</li>
<li>收集并深刻理解广告行业，理解客户的需求，洞察市场方向，提出创新、合理的产品方向</li>
<li>优化广告效果，为广告优化指标负责</li>
<li>在项目推进过程中协调本部门、跨部门资源，确保项目顺利进行</li>
</ul>
</li>
<li>职位要求
<ul>
<li>本科及以上学历，3年以上互联网商业产品工作经验，有广告系统相关产品经验</li>
<li>深入理解互联网效果广告或者移动广告业务，有判断力</li>
<li>拥有较强的项目管理能力和沟通能力，能够把握各方需求</li>
<li>逻辑能力强，能承受工作压力，具有自我管理和时间管理能力</li>
<li>敢于突破创新，积极主动、工作认真，沟通协作能力强，富有团队精神</li>
</ul>
</li>
</ul>
<p><strong>广告后台产品经理</strong></p>
<ul>
<li>职位描述
<ul>
<li>负责自助广告的后端产品工作，包括项目规划、需求分析、功能制定、设计规划、落地上线及优化迭代等</li>
<li>在项目推进过程中协调本部门、跨部门资源，确保项目顺利进行</li>
<li>针对业务运营情况进行数据监测，合理分析，给运营提出建议和解决方案</li>
</ul>
</li>
<li>职位要求
<ul>
<li>本科及以上学历，3年以上互联网公司商业产品或后端产品相关经验，有一定的商业Sense</li>
<li>从事过CRM、CMS、广告后台等产品经验优先</li>
<li>拥有较强的项目管理能力和沟通能力，能够把握各方需求</li>
<li>逻辑能力强，能承受工作压力，具有自我管理和时间管理能力</li>
<li>敢于突破创新，积极主动、工作认真，沟通协作能力强，富有团队精神</li>
</ul>
</li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>产品经理学习路线</title>
            <link>https://www.marshalgao.com/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</link>
            <pubDate>Sun, 18 Oct 2020 11:21:28 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/%E4%BA%A7%E5%93%81%E7%BB%8F%E7%90%86%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF/</guid>
            <description></description>
            <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/revised_study2.png" alt=""></p>
]]></content>
        </item>
        
        <item>
            <title>ICOM6012 Transport Layer</title>
            <link>https://www.marshalgao.com/icom6012-transport-layer/</link>
            <pubDate>Thu, 15 Oct 2020 13:50:12 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/icom6012-transport-layer/</guid>
            <description>Transport-layer Services Transport Services and Protocols
 Provide logical communication (actually accomplished by network layer) between app processes on different hosts  logical communication means a pair of hosts is not connected physically, but it seems that they are connected by channel   Transport protocols run in end systems  send side: breaks app messages into segments (if needed), passes to network layer  using segment header, including port number, to communicate with the socket of receiver  receive side: reassembles segemnts into messages, uses segement header (or port number) to pass to application layer  More than one transport protocol available to apps  Majority: TCP and UDP  TCP: reliable, in-order delivery  congestion control flow control connection setup  UDP: unreliable, unordered delivery  no-frills extension of &amp;quot;best-effort&amp;quot; IP   Others: SCTP and DCCP  These protocols are very limited, so we just ignore them.</description>
            <content type="html"><![CDATA[<h2 id="transportlayer-services">Transport-layer Services</h2>

<p><strong>Transport Services and Protocols</strong></p>

<ul>
<li>Provide <strong><em>logical communication</em></strong> (actually accomplished by network layer) between app processes on different hosts

<ul>
<li><strong><em>logical communication</em></strong> means a pair of hosts is not connected physically, but it seems that they are connected by channel
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/IMG_0017.jpeg" alt="logical communication"></figure></li>
</ul></li>
<li>Transport protocols run in end systems

<ul>
<li><strong>send side</strong>: breaks app messages into <strong><em>segments</em></strong> (if needed), passes to network layer

<ul>
<li>using segment header, including port number, to communicate with the socket of receiver</li>
</ul></li>
<li><strong>receive side</strong>: reassembles segemnts into messages, uses segement header (or port number) to pass to application layer</li>
</ul></li>
<li>More than one transport protocol available to apps

<ul>
<li>Majority: <strong>TCP</strong> and <strong>UDP</strong>

<ul>
<li><strong>TCP</strong>: reliable, in-order delivery

<ul>
<li>congestion control</li>
<li>flow control</li>
<li>connection setup</li>
</ul></li>
<li><strong>UDP</strong>: unreliable, unordered delivery

<ul>
<li>no-frills extension of &quot;best-effort&quot; IP</li>
</ul></li>
</ul></li>
<li>Others: SCTP and DCCP

<ul>
<li>These protocols are very limited, so we just ignore them. Unless in specific environment, for example, SCTP would be used in wireless network (e.g. celluar network)</li>
</ul></li>
</ul></li>
<li>Services not available

<ul>
<li>delay guarantee</li>
<li>bandwidth guarantee</li>
<li>throughput guarantee</li>
<li><strong>Q: Why the Internet can not guarantee throughput and so on?</strong></li>
<li>A: Because the data link layer can not guarantee, the network layer can not guarantee. For example, we can use Zoom to meet, but the Internet can not guarantee the quality.</li>
</ul></li>
</ul>

<p><strong>Transport Layer Actions</strong></p>

<ul>
<li>Sender:

<ul>
<li>is passed an application-layer message</li>
<li>determines segment header fields values, including port number

<ul>
<li><strong>not change the pillow, just add a header with some important information</strong></li>
</ul></li>
<li>creates segment</li>
<li>passed segement to IP</li>
</ul></li>
<li>Receiver:

<ul>
<li>receives segment from IP, ensuring the packet has arrived at the correct destination</li>
<li>checks header values</li>
<li>extracts application-layer message</li>
<li>demultiplexes message up to application via socket</li>
</ul></li>
</ul>

<h2 id="multiplexing-and-demultiplexing">Multiplexing and Demultiplexing</h2>

<p><strong>Overview</strong></p>

<ul>
<li>Multiplexing and demultiplexing happen at all layers. For example,

<ul>
<li>application layer &amp; transport Layer -&gt; port number in the TCP and UDP header</li>
<li>transport layer &amp; network layer -&gt; protocol ID in the IP header</li>
<li>network layer &amp; data link layer -&gt; frame type in the Ethernet header, for example.
<br></li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-15%20%E4%B8%8B%E5%8D%884.54.22.png" alt=""></figure></p>

<p><strong>Demultiplexing</strong></p>

<ul>
<li>Host receives IP datagrams (network layer)

<ul>
<li>each datagram has source &amp; destination IP addresses</li>
<li>each datagram carries one transport-layer segment</li>
<li>each segment has source &amp; destination port number (for resending and replying purpose)</li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/IMG_0018.jpeg" alt=""></figure></p>

<ul>
<li><p>Host uses IP addresses &amp; port numbers to direct segment to appropriate socket</p></li>

<li><p>Connectionless Demux (UDP Using destination port number only)</p>

<ul>
<li>Create socket with unique local port number, which is assigned by OS (sender)</li>
<li>When creating datagram to send into UDP socket, must specify (sender)</li>
<li>destination IP address</li>
<li>destination port number</li>
<li>When host receives UDP segment (receiver)</li>
<li>checks destination port number in segment</li>
<li>directs UDP segment to socket with that port number</li>
<li>Others</li>
<li>IP datagrams with <strong>same destination &amp; port number</strong>, but different source IP addresses and/or source port numbers will be directed to <strong>same socket</strong> at destination

<ul>
<li><strong>Q: We call the UDP segment &quot;datagram&quot;, why?</strong></li>
<li>A: Becasue UDP does not improve or enhance the service of network layer.</li>
</ul></li>
<li>share the same socket, but UDP does not care</li>
<li>UDP socket is identified by two-tuple: (dest IP address, dest port number)</li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-18%20%E4%B8%8B%E5%8D%887.57.53.png" alt=""></figure></p>

<ul>
<li>Connection-oriented Demux (Using 4-tuple)

<ul>
<li>TCP socket identified by 4-tuple:</li>
<li>source IP address</li>
<li>source port number</li>
<li>dest IP address</li>
<li>dest port number</li>
<li>Server host may support many simultaneous TCP sockets</li>
<li>each socket is identified by its own 4-tuple</li>
<li>Receiver uses all four values to direct segment to appropriate socket</li>
<li>Web servers have different sockets for each connecting client</li>
<li>Non-persistent HTTP will have different sockets for each request</li>
<li>Others</li>
<li>UDP shares one socket, but TCP has additional sockets</li>
<li>TCP consumes extra resources, such as memory</li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/connection.png" alt=""></figure></p>

<h2 id="connectionless-transport-udp">Connectionless Transport: UDP</h2>

<ul>
<li>Features

<ul>
<li>&quot;no frills&quot;, &quot;bare bones&quot; Internet transport protocol (means get the packets from Internet but do nothing)</li>
<li>&quot;best effort&quot; service, UDP segment may be lost or delivered out-of-order to app</li>
<li>connectionless</li>
<li>no handshaking between UDP senders and receivers</li>
<li>each UDP segment handled independently of others</li>
</ul></li>
<li>The Reason of the Existence of UDP (Advantages)

<ul>
<li>no connection establishment</li>
<li>DNS choose this, due to no additional RTT delay</li>
<li>simple (no connection)</li>
<li>small header size</li>
<li>no congestion control</li>
<li>UDP can blast away as fast as desired</li>
<li>can function in the face of congestion</li>
</ul></li>
<li>Usage

<ul>
<li>streaming multimedia apps (loss tolerant, rate sensitive)</li>
<li>DNS</li>
<li>SNMP</li>
<li>HTTP/3</li>
<li>if used UDP

<ul>
<li>add needed reliability at application layer</li>
<li>add congestion control at application layer</li>
</ul></li>
</ul></li>
<li>Segment

<ul>
<li>length: in bytes of UDP segment, inlcuding header</li>
<li>UDP segment would keep the length of packet below 1500 bytes, in order to avoid being fragmented by router</li>
<li>checksum: for error detection (cannnot dectect all, but majority)</li>
<li>procedure

<ul>
<li>sender</li>
<li>treat segment contents, including header (8 bytes), as sequence of 16-bit integers</li>
<li>checksum: addition (one's complement sum) of segment contents</li>
<li>sender puts checksum value into UDP checksum field</li>
<li>receiver</li>
<li>compute checksum of received segment</li>
<li>check if computed checksum equals checksum field value:

<ul>
<li>no - error detected (two options)</li>
<li>transport layer drop it</li>
<li>transmit to application layer, it would decide the next action</li>
<li>yes - no error detected (but may still have errors)</li>
</ul></li>
</ul></li>
<li>others

<ul>
<li>some implementations allow UDP checksum calculation to be disabled in order to speed up the processing of incoming UDP datagrams
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/111.png" alt=""></figure></li>
</ul></li>
</ul></li>
</ul>

<h2 id="connectionoriented-transport-tcp">Connection-oriented Transport: TCP</h2>

<ul>
<li>Services

<ul>
<li>point-to-point</li>
<li>reliable, in-order byte stream (no message boundaries)

<ul>
<li>using ACK and sequence number to be reliable</li>
<li>ACK and sequence number are byte-stream numbers, not packet number</li>
<li>the sequence number of a segment is the byte-stream number of the first byte in the segment</li>
</ul></li>
<li>full duplex data

<ul>
<li>bi-directional data flow in same connection</li>
<li>MSS: maximum segment size (excluding header)

<ul>
<li>connection specific</li>
<li>two direcrions may have different MSSs</li>
<li>in contrast, UDP has packet size</li>
<li>depends on two issues

<ul>
<li>overhead management</li>
<li>IP fragmentation</li>
</ul></li>
<li>absolute limit: 65495 =<span  class="math">\(\ (2^{16}-1-40)\)</span>

<ul>
<li><span  class="math">\(\ 2^{16}-1\)</span> is IP datagram maximum size</li>
<li>IP header costs 20 bytes, and TCP header costs 20 bytes -&gt; 40 bytes</li>
<li>in practice, it is hard to reach this number</li>
</ul></li>
<li>typically, its value is 1460 bytes (just pillow)

<ul>
<li>TCP header is 20 bytes (min), IP datagram header is 20 bytes (min), Ethernet maximum frame size is 1500 bytes (but up to 8000 bytes in data centre)</li>
</ul></li>
</ul></li>
</ul></li>
<li>cumulative ACKs (in the header)

<ul>
<li>ACK: sequence number of next byte expected from other side</li>
<li>duplicated ACKs means packet loss (then restransmit fastly) or packets out of order</li>
<li>another method to detect packet loss (then restransmit fastly) is timer (using time-out)

<ul>
<li>TCP and UDP both use this
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-19%20%E4%B8%8B%E5%8D%885.32.08.png" alt=""></figure></li>
</ul></li>
</ul></li>
<li>pipelining (means keep talking)

<ul>
<li>unpipelining -&gt; transmit packets one by one, but it is reliable</li>
</ul></li>
<li>connection-oriented</li>
<li>flow control

<ul>
<li>sender will not overwhelm receive buffer</li>
</ul></li>
<li>congestion control

<ul>
<li>focus on router buffer</li>
<li>through window size (key factor)</li>
</ul></li>
<li>others

<ul>
<li>send buffer

<ul>
<li>decide when to send packets</li>
<li>resending purpose</li>
</ul></li>
<li>receive buffer

<ul>
<li>solve the problem of out-of-order packets</li>
</ul></li>
</ul></li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-19%20%E4%B8%8A%E5%8D%8810.40.20.png" alt=""></figure></p>

<ul>
<li>Segment Structure

<ul>
<li>source &amp; dest ports -&gt; mutiplexing &amp; demultiplexing</li>
<li>header length (4 bits)

<ul>
<li><strong>Q: What is the max header size?</strong></li>
<li>A: The TCP header would combine 4 bytes as a union, although header length only has 4 bits (15), the max header size is 60 bytes. Because TCP also has &quot;option&quot; in the header, there are 20 bytes except for &quot;options&quot;.</li>
</ul></li>
<li>C, E (for newer protocols, explicit congestion control, we can just ignore them)</li>
<li>U (seldomly used)

<ul>
<li>if U equals 1, the pillow contains two types of data

<ul>
<li>urgent data

<ul>
<li>start from the first byte to the urgent data pointer</li>
</ul></li>
<li>original data</li>
</ul></li>
<li>the boundary of above two types of data is indicated by urgent data pointer</li>
</ul></li>
<li>P, means push quickly

<ul>
<li>the client would not transmit a packet to application layer when the transport layer receives the packet immediately</li>
<li>packets would be save in the buffer, until the value of P equals 1, packets would be transmitted to the application layer together (buffer would be empty at the same time)</li>
</ul></li>
<li>R, S, F

<ul>
<li>RST: if the client or server crashes, make R as 1 to reset everything</li>
<li>SYN: connection request</li>
<li>FIN: finish my connection (finsh connections on both sides)</li>
</ul></li>
</ul></li>
</ul>

<p><figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-19%20%E4%B8%8A%E5%8D%8811.27.01.png" alt=""></figure></p>

<ul>
<li>Reliable Data Transfer

<ul>
<li>window size

<ul>
<li>best N: determined by congestion control

<ul>
<li><strong>Q: How receiver handles out-of-order segments?</strong></li>
<li>A: TCP spec does not say, up to implementor.
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-19%20%E4%B8%8B%E5%8D%884.34.24.png" alt=""></figure></li>
</ul></li>
</ul></li>
<li>TCP round trip time, timeout

<ul>
<li>timer would be put in the oldest packet</li>
<li>timeout value

<ul>
<li>longer than RTT, but RTT varies</li>
<li>too short: premature timeout, unnecessary retransmissions</li>
<li>too long: slow reaction to segment loss</li>
</ul></li>
<li>estimate RTT

<ul>
<li>SampleRTT: measured time from segment transmission until ACK receipt

<ul>
<li>ignore retransmissions</li>
<li>SampleRTT will vary, want estimated RTT &quot;smoother&quot;

<ul>
<li>average several recent measurements, not just current SampleRTT</li>
</ul></li>
</ul></li>
<li>EstimatedRTT =<span  class="math">\(\ (1-\alpha)\times\)</span>EstimatedRTT + <span  class="math">\(\alpha\times\)</span>SampleRTT

<ul>
<li>exponential weighted moving average (EWMA)</li>
<li>influence of past sample decreases exponentially fast</li>
<li>typcial value: <span  class="math">\(\alpha\)</span> = 0.125</li>
<li>EstimatedRTT just like average RTT, SampleRTT just like current RTT, we can combine them to update EstimatedRTT
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-19%20%E4%B8%8B%E5%8D%885.03.25.png" alt=""></figure></li>
</ul></li>
</ul></li>
<li>timeout interval: EstimatedRTT plus &quot;safety margin&quot;

<ul>
<li>large variation in EstimatedRTT: want a larger safety margin</li>
<li>TimeoutInterval = EstimatedRTT + 4<span  class="math">\(\times\)</span>DevRTT

<ul>
<li>DevRTT (safety margin): EWMA of SampleRTT deviation from EstimatedRTT</li>
<li>DevRTT = (1 - <span  class="math">\(\beta\)</span>)<span  class="math">\(\times\)</span>DevRTT + <span  class="math">\(\beta\times\)</span>|SampleRTT - EstimatedRTT|

<ul>
<li><span  class="math">\(\beta\)</span> = 0.25</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
<li>TCP fast retransmit

<ul>
<li>due to lots of experiments, 3 duplicated ACKs are the best option
<figure><img src="https://raw.githubusercontent.com/MarshalGao/image_hosting/master/hugo_images/%E6%88%AA%E5%B1%8F2020-10-19%20%E4%B8%8B%E5%8D%885.38.49.png" alt=""></figure></li>
</ul></li>
<li>advantages of delayed ACK

<ul>
<li>wait up to 500ms for next segment and send a ACK for several segments to save</li>
<li>save dedicated ACK (no pillow, just header)</li>
</ul></li>
</ul></li>
</ul>
]]></content>
        </item>
        
        <item>
            <title>LeetCode[1] Two Sum</title>
            <link>https://www.marshalgao.com/leetcode1-two-sum/</link>
            <pubDate>Wed, 07 Oct 2020 18:24:14 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/leetcode1-two-sum/</guid>
            <description>Question: Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.
You may assume that each input would have exactly one solution, and you may not use the same element twice.
You can return the answer in any order.
Example 1: Input: nums = [2,7,11,15], target = 9 Output: [0,1] Output: Because nums[0] + nums[1] == 9, we return [0, 1].</description>
            <content type="html"><![CDATA[<h2 id="question">Question:</h2>

<p align="justify">Given an array of integers <b>nums</b> and an integer <b>target</b>, return <i>indices of the two numbers such that they add up to <b>target</b></i>.</p>

<p align="justify">You may assume that each input would have <strong><i>exactly</i> one solution</strong>, and you may not use the <i>same</i> element twice.</p>

<p>You can return the answer in any order.</p>

<h2 id="example-1">Example 1:</h2>
<pre><code>Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Output: Because nums[0] + nums[1] == 9, we return [0, 1].</code></pre>
<h2 id="example-2">Example 2:</h2>
<pre><code>Input: nums = [3,2,4], target = 6
Output: [1,2] </code></pre>
<h2 id="example-3">Example 3:</h2>
<pre><code>Input: nums = [3,3], target = 6
Output: [0,1]</code></pre>
<h2 id="constraints">Constraints:</h2>

<ul>
<li>2 <span  class="math">\(\leq\)</span> nums.length <span  class="math">\(\leq 10^5\)</span></li>
<li><span  class="math">\(-10^9 \leq\)</span> nums[i] <span  class="math">\(\leq 10^9\)</span></li>
<li><span  class="math">\(-10^9 \leq\)</span> target <span  class="math">\(\leq 10^9\)</span></li>
<li><strong>Only one valid answer exists.</strong></li>
</ul>

<h2 id="my-interesting-code">My Interesting Code:</h2>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python"><span style="color:#66d9ef">class</span> <span style="color:#a6e22e">Solution</span>(object):
    <span style="color:#66d9ef">def</span> <span style="color:#a6e22e">twoSum</span>(self, nums, target):
        <span style="color:#e6db74">&#34;&#34;&#34;
</span><span style="color:#e6db74">        :type nums: List[int]
</span><span style="color:#e6db74">        :type target: int
</span><span style="color:#e6db74">        :rtype: List[int]
</span><span style="color:#e6db74">        &#34;&#34;&#34;</span>
        <span style="color:#66d9ef">for</span> i <span style="color:#f92672">in</span> nums:
            temp <span style="color:#f92672">=</span> nums[:nums<span style="color:#f92672">.</span>index(i):] <span style="color:#f92672">+</span> nums[nums<span style="color:#f92672">.</span>index(i)<span style="color:#f92672">+</span><span style="color:#ae81ff">1</span>::]
            <span style="color:#66d9ef">for</span> j <span style="color:#f92672">in</span> temp:
                <span style="color:#66d9ef">if</span> i <span style="color:#f92672">+</span> j <span style="color:#f92672">==</span> target:
                    result_1 <span style="color:#f92672">=</span> nums<span style="color:#f92672">.</span>index(i)
                    nums<span style="color:#f92672">.</span>remove(i)
                    result_2 <span style="color:#f92672">=</span> nums<span style="color:#f92672">.</span>index(j) <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>
                    <span style="color:#66d9ef">return</span> list((result_1, result_2))</code></pre></div>
<h2 id="my-perspective-chinese-only">My Perspective (Chinese Only)</h2>

<p align="justify">之所以是interesting的代码，是因为个人擅长使用暴力拆解。所以在LeetCode的所有习题中，在保证通过的情况下，个人会优先考虑暴力拆解。暴力拆解的优势在于代码易于理解，但是其时间复杂度和空间复杂度较高。</p>

<p align="justify">首先，我们先依次遍历列表nums。以第一个Example为例，当我们取出数字2后，为了寻找符合target的元素，我们只需遍历除了数字2以外的元素即可。那么如何获取除了数字2以外的元素？Python自带的切片(split)可以很好的解决这个问题。所以，下面先来学习一下切片。</p>

<p align="justify">一个完整的切片表达式包含两个“:”，用于分隔三个参数(start_index、end_index、step)。当只有一个“:”时，默认第三个参数step=1；当一个“:”也没有时，start_index=end_index，表示切取start_index指定的那个元素。</p>

<p align="justify">step：正负数均可，其绝对值大小决定了切取数据时的“步长”，而正负号决定了“切取方向”，正表示“从左往右”取值，负表示“从右往左”取值。当step省略时，默认为1，即从左往右以步长1取值。</p>

<p align="justify">start_index：表示起始索引（包含该索引对应值）；该参数省略时，表示从对象“端点”开始取值，至于是从“起点”还是从“终点”开始，则由step参数的正负决定，step为正从“起点”开始，为负从“终点”开始。</p>

<p align="justify">end_index：表示终止索引（不包含该索引对应值）；该参数省略时，表示一直取到数据“端点”，至于是到“起点”还是到“终点”，同样由step参数的正负决定，step为正时直到“终点”，为负时直到“起点”。</p>
<div class="highlight"><pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4"><code class="language-python" data-lang="python">nums <span style="color:#f92672">=</span> [<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">4</span>]
<span style="color:#f92672">&gt;&gt;</span>nums[<span style="color:#ae81ff">0</span>: <span style="color:#ae81ff">2</span>:] <span style="color:#f92672">=</span> [<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">2</span>]
<span style="color:#f92672">&gt;&gt;</span>nums[<span style="color:#ae81ff">1</span>: <span style="color:#ae81ff">3</span>: <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>] <span style="color:#f92672">=</span> []
<span style="color:#f92672">&gt;&gt;</span>nums[: <span style="color:#ae81ff">2</span>: <span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>] <span style="color:#f92672">=</span> [<span style="color:#ae81ff">4</span>]
<span style="color:#f92672">&gt;&gt;</span>nums[::] <span style="color:#f92672">=</span> [<span style="color:#ae81ff">1</span>, <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">4</span>]
<span style="color:#f92672">&gt;&gt;</span>nums[::<span style="color:#f92672">-</span><span style="color:#ae81ff">1</span>] <span style="color:#f92672">=</span> [<span style="color:#ae81ff">4</span>, <span style="color:#ae81ff">3</span>, <span style="color:#ae81ff">2</span>, <span style="color:#ae81ff">1</span>]</code></pre></div>
<p align="justify">学习好切片后，我们接着以第一个Example为例说明。当取出数字2后，利用切片，将nums中除了数字2以外的元素全部取出，组成新的列表temp。将temp中的每一个元素与数字2相加，如果结果等于target，便将两个元素的索引返回。注意，这里的元素索引应为nums中的元素索引值。特别地，在返回list时，小括号需用两层进行嵌套，否则会造成结果错误。</p>

<p align="justify">本题所采用的暴力拆解是一种易于理解，基于穷举并完全遍历的思想，会造成一定的时间和空间浪费，但由于Python的切片是基于for循环的一种优化，所以代码效率相较于纯for循环来说，要好很多。</p>
]]></content>
        </item>
        
        <item>
            <title>Vlog 2 Quarantine Diary</title>
            <link>https://www.marshalgao.com/vlog-2-quarantine-diary/</link>
            <pubDate>Wed, 02 Sep 2020 14:12:35 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/vlog-2-quarantine-diary/</guid>
            <description>   疫情期间赴港上学隔离14天的生活即将结束，刚刚上完第一节课，视频传传好，我要冲了，努力学习！ 再次感谢小刘同学提供的BGM，期望以后可以持续输出！ </description>
            <content type="html"><![CDATA[<div class="iframe-container">
    <iframe src="https://player.bilibili.com/player.html?aid=839485025&bvid=BV1S54y127AP&cid=231463415&page=1" allowfullscreen> </iframe>
</div>
<hr>
<h5 id="疫情期间赴港上学隔离14天的生活即将结束刚刚上完第一节课视频传传好我要冲了努力学习">疫情期间赴港上学隔离14天的生活即将结束，刚刚上完第一节课，视频传传好，我要冲了，努力学习！</h5>
<h5 id="再次感谢小刘同学提供的bgm期望以后可以持续输出">再次感谢小刘同学提供的BGM，期望以后可以持续输出！</h5>
]]></content>
        </item>
        
        <item>
            <title>Vlog 1  New Arrival</title>
            <link>https://www.marshalgao.com/vlog-1-new-arrival/</link>
            <pubDate>Sun, 23 Aug 2020 14:44:52 +0800</pubDate>
            
            <guid>https://www.marshalgao.com/vlog-1-new-arrival/</guid>
            <description>   疫情期间赴香港隔离，一路上新奇拍拍拍。要开始读书了，冲！ 特别感谢小刘同学提供的BGM，在这里夸赞一下她的歌品！ </description>
            <content type="html"><![CDATA[<div class="iframe-container">
    <iframe src="https://player.bilibili.com/player.html?aid=499308002&bvid=BV1QK411T7CR&cid=227836652&page=1" allowfullscreen> </iframe>
</div>
<hr>
<h5 id="疫情期间赴香港隔离一路上新奇拍拍拍要开始读书了冲">疫情期间赴香港隔离，一路上新奇拍拍拍。要开始读书了，冲！</h5>
<h5 id="特别感谢小刘同学提供的bgm在这里夸赞一下她的歌品">特别感谢小刘同学提供的BGM，在这里夸赞一下她的歌品！</h5>
]]></content>
        </item>
        
    </channel>
</rss>
