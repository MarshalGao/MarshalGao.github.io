<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>This Is Marshal</title>
    <link>https://www.marshalgao.com/</link>
    <description>Recent content on This Is Marshal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://www.hku.hk&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;The University of Hong Kong&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 08 Jan 2021 17:35:12 +0800</lastBuildDate><atom:link href="https://www.marshalgao.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Needs and Development of Internet Advertising</title>
      <link>https://www.marshalgao.com/the-needs-and-development-of-internet-advertising/</link>
      <pubDate>Fri, 08 Jan 2021 17:35:12 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/the-needs-and-development-of-internet-advertising/</guid>
      <description>纵观互联网广告行业的发展历程
 门户时代互联网广告（广告主仍然偏爱传统流量） 搜索广告的出现 （比如谷歌、百度、阿里妈妈） 信息流广告的革命性改变（比如Facebook，今日头条，腾讯社交广告）  以广告主、媒体方的发展及需求为主线，理解行业的发展变化
 持续面临的问题  广告主  更愿意为效果付费，而非展现 期望更精准地获得流量 不知怎么更好地做投放决策   媒体方  大媒体及小媒体都希望尽可能卖出更多流量 媒体需要提高单个流量的变现效率 媒体期望降低链条的交易成本     基于面临问题进行的行业转变  由仅支持按曝光计费变为可选择按效果计费  早期以CPT、CPM等曝光类方式计费 搜索引擎率先推出了按点击付费的方式  平衡广告主和媒体的利益 媒体侧重给广告更多有效的点击 广告主负责将点击转化   按转化计费方式的出现（由于落地页由媒体方提供和负责，其很难监控转化数据、优化转化效率，所以推出这种计费方式的媒体不多）  填写表单 下单 下载等     由粗糙的定向投放变为精细化定向投放  人物画像的出现 定向采买的实现 DMP对数据的高度整合，使广告被投向不同的媒体平台 近些年，也会通过广告与用户的互动来实现召回，减少不必要的曝光   小媒体由不能获益变为能获得广告收益  早期卖的流量比较粗，只有大的媒体和核心广告位比较抢手 越来越多的小媒体拥有小流量，单看流量自身，其对广告主是十分有价值的 整合大小媒体，出现了广告联盟  大媒体可以正常获客 小媒体可以售卖自身流量 广告主可以获得更多的有效流量，且没有增加成本     由提前锁定部分媒体的流量资源，变为实时竞价多个媒体的流量资源  互联网广告早期的交易方式是广告主提前出价，与媒体约定采买的量，媒体预留展示机会给广告主  对于广告主，他们期望在媒体选择、预算分配及出价方案上有一定的灵活性，也期望能降低决策成本、同时让购买的流量尽可能多地有价值 对于媒体方，这种方式容易让其错失一些更愿意出高价的潜在客户，也容易在流量波动的情况下不能灵活调整售卖策略，同时中小媒体在前述方式下也难获得交易机会   实时竞价的出现  将每个流量视作独立的售卖单位 可以单独售卖、多人竞价、实时交易 实现方式  DSP、SSP、ADX、DMP的结合 SSP是为媒体方服务的，负责和ADX对接，接入SSP的媒体，在广告位有单个流量到来时，可发起广告请求，向ADX询问是否有合适的广告可展现 ADX是为DSP和SSP服务的，起到衔接、匹配的作用，它接收到SSP的请求后，将广告流量信息传递给DSP，询问它们的出价，DSP响应后返回相应的广告创意及出价 DSP是为广告主服务的，负责和ADX对接，若干广告主将预算、创意、出价、流量要求等提交给DSP，DSP负责具体投放决策 DMP提供数据服务，帮助广告主更准确地了解每个流量，帮助其决策       由按流量统一出价变为按流量差异化出价  主要针对的是点击计费的场景 按照传统的点击计费逻辑，广告主为每个点击付出的成本大体是相近的 追求效果的广告主通常按下载、填写表单等实际转化来核算成本 由于每个点击的实际转化率波动大、再加上客户在短时间获得的点击量较小，这就导致按上述计费方式换算的转化成本不稳定，客户的成本和预算不太可控，安全感较低 由于出价是固定的，对于那些转化率更高的流量，客户没办法在控制总预算的前提下临时调整出价以竞争到展现广告的机会 oCPC的诞生  客户设定转化出价（例如一个下载平均20元），对于每一个流量，系统可根据预估的转化率调整点击出价，使转化成本相对稳定 按照这个逻辑，系统可对预估转化率高的流量提高出价，预估转化率低流量降低出价        </description>
    </item>
    
    <item>
      <title>LeetCode[176] Second Highest Salary</title>
      <link>https://www.marshalgao.com/leetcode176-second-highest-salary/</link>
      <pubDate>Fri, 08 Jan 2021 16:37:07 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/leetcode176-second-highest-salary/</guid>
      <description>Question Write a SQL query to get the second highest salary from the Employee table.
+----+--------+ | Id | Salary | +----+--------+ | 1 | 100 | | 2 | 200 | | 3 | 300 | +----+--------+  For example, given the above Employee table, the query should return 200 as the second highest salary. If there is no second highest salary, then the query should return null.
+---------------------+ | SecondHighestSalary | +---------------------+ | 200 | +---------------------+  SQL Schema Create table If Not Exists Employee (Id int, Salary int) Truncate table Employee insert into Employee (Id, Salary) values (&#39;1&#39;, &#39;100&#39;) insert into Employee (Id, Salary) values (&#39;2&#39;, &#39;200&#39;) insert into Employee (Id, Salary) values (&#39;3&#39;, &#39;300&#39;)  My Interesting Code SELECT MAX(Salary) AS SecondHighestSalary FROM Employee WHERE Salary &amp;lt; (SELECT MAX(Salary) FROM Employee) My Perspective This question is also simple.</description>
    </item>
    
    <item>
      <title>LeetCode[175] Combine Two Tables</title>
      <link>https://www.marshalgao.com/leetcode175-combine-two-tables/</link>
      <pubDate>Fri, 08 Jan 2021 16:21:38 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/leetcode175-combine-two-tables/</guid>
      <description>Question Table: Person
+-------------+---------+ | Column Name | Type | +-------------+---------+ | AddressId | int | | PersonId | int | | City | varchar | | State | varchar | +-------------+---------+ PersonId is the primary key column for this table.  Table: Address
+-------------+---------+ | Column Name | Type | +-------------+---------+ | AddressId | int | | PersonId | int | | City | varchar | | State | varchar | +-------------+---------+ AddressId is the primary key column for this table.</description>
    </item>
    
    <item>
      <title>ECOM7123 Open Data &amp; Spatial Data Infrastructure (SDI)</title>
      <link>https://www.marshalgao.com/ecom7123-open-data-spatial-data-infrastructure-sdi/</link>
      <pubDate>Fri, 08 Jan 2021 09:20:54 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/ecom7123-open-data-spatial-data-infrastructure-sdi/</guid>
      <description>Data in Smart Cities Overview
 real time data  collected from  devices sensor network IoT   sources  parking spaces city trash bins vehicles energy turbines, etc.     data: existing in different forms  data in cloud  pay for actual usage centralized &amp;amp; remote management accessible in different locations   big data  large and complex data sets difficult to be handled by traditional technologies like relational database requires new technologies and processing applications like Hadoop to deal with   spatial data  80% of data generated in our daily lives are spatial data identifies the geographic location of features and boundaries on earth     value of data in developing smart city  to understand where, when, how and why to support policy-making to optimize operations to enable smart apps and services    Future</description>
    </item>
    
    <item>
      <title>Data Analysis</title>
      <link>https://www.marshalgao.com/data-analysis/</link>
      <pubDate>Thu, 07 Jan 2021 15:51:48 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/data-analysis/</guid>
      <description>定性分析与定量分析
 定性分析  对事物性质的归纳 对问题的一种假设   定量分析  对事物数量的统计 对问题的一种验证   数据基础  访谈（定性） 问卷（定量） &amp;hellip;   闭环  定性假设 -&amp;gt; 定量验证 -&amp;gt; 结论 -&amp;gt; 定性假设   区别   定性分析步骤
 转录  文本是最方便处理的形式，首先需要将获得的录音、现场笔记等资料转录为可读的文本   编码  是对资料进行简化、提炼、初步分析的过程 常见方法  归纳法  基于扎根理论，在开始分析之前并不预设编码系统，而是在分析资料的过程中逐步地、自下而上地形成编码系统，从而能够实现从原始资料中提炼出理论和规律   演绎法  根据已有的理论和假设，预先设定一套编码系统，在资料分析的过程中直接使用这套系统中的代码进行标记   综合方法  融合了归纳法和演绎法，不预设代码系统，但是为代码预先创建一套基本的说明系统，限定代码的规则和范围 在资料分析的过程中，根据资料本身的属性和说明系统的要求，产生代码       资料展示  使用可读性更强或者逻辑关系更加清晰的形式展示信息，资料展示的过程也是对资料进行进一步分析的过程 常见方法  矩阵表  类似于表格 了解事件的流程和关联，或者用于个案间的比较   网状图  类似于变量与变量之间的关系网 强调多个变量或者元素之间的关系   脉络图  将群体按照社会体系进行划分，找出内在联系，类似于人际关系脉络 描绘所处的情境、社会体系等，在相关脉络中深入理解人的行为   决策图  类似于流程图 思考和决策的关键节点和流程   认知图  类似于日常的笔记作图，随意关系指代 非层级的网状图，包括很多节点及其联系，表现人们的认知模式   散点图  利用坐标系展现所有所有点（即每一个案例） 根据两个或者多个维度，展示所有个案的情况。       引出结论  从资料中提炼出规律、模式、解释、因果、命题等，并在提炼的过程中快速验证    定量分析步骤</description>
    </item>
    
    <item>
      <title>ECOM7123 Smart Mobility</title>
      <link>https://www.marshalgao.com/ecom7123-smart-mobility/</link>
      <pubDate>Thu, 07 Jan 2021 09:44:07 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/ecom7123-smart-mobility/</guid>
      <description>Overview Mobility
 definition  mobility describes the ability of people and goods to move around an area, and in doing so to access the essential facilities, communities &amp;amp; other destinations that are required to support a decent quality of life &amp;amp; a buoyant economy mobility incorporates the transport infrastructure &amp;amp; services that facilitate these interactions   challenges of urban mobility  overview  congestion energy crisis pollution climate change   details  increasing demand for travel in city centers, suburbs &amp;amp; between the two areas increasing demand for improved intercity mobility requiring faster &amp;amp; more direct connectivity between destinations increasing city traffic, pollution, waste production &amp;amp; CO2 emission      Smart Mobility Goals</description>
    </item>
    
    <item>
      <title>Development Model</title>
      <link>https://www.marshalgao.com/development-model/</link>
      <pubDate>Wed, 06 Jan 2021 16:35:38 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/development-model/</guid>
      <description>5种常见开发模式
 瀑布式开发  典型的预见性方法 自上而下 上一阶段结束，下一阶段执行，不可回溯 优点  预先计划 便于确定预期的开发成本和时间   缺点  无法预知未来 环环相扣，一环出问题，满盘皆输 测试发现问题，开发没法及时解决（开发此时可能已经处于下一个项目的研发中）   适合场景  具有明确定义和不变需求的中小型项目，比如小型公司网站开发 需要严格控制流程，预算和时间表可预测的项目，比如政府类项目 必须遵守多个规章制度的项目，比如医疗软件 使用了业内熟悉的成熟的技术方案的项目      增量和迭代开发  增量开发  项目切割成子模块（相对独立） 横向开发 可以顺序进行，也可以并行进行 如果研发资源有限，需要进行子模块的排序 如果研发资源充足，那么在设计阶段PM任务量较大    迭代开发  项目切割成子任务（以上一次迭代为基础进行） 纵向开发 项目初期不需要完整的规范，在开发过程中可以对需求进行少量更改，但需求根本和主体不能改变 每次迭代需要留下清晰的文档    优点  如果失败，只是一小部分的失败，降低损失，软件容易成功 也可以根据上线版本的用户反馈，结合完成下一次迭代方案   缺点  沟通或文档的不清晰，会导致后期融合出现问题   适合场景  大型关键企业应用程序，最好由松散耦合的部分组成，比如微服务或web服务类     看板开发  属于敏捷开发的一种（scrum也是其中一种） 自下而上（与瀑布式开发对比） 后道工序需要时，给前道工序发信号，前道工序才启动任务 用户需求为原动力 优点  没有明显的迭代过程，可以随时加入新需求 即来即增加，即变即更新 团队中的人可以清楚看到所有任务的负责人以及进度等 透明度高有助于准确估计最要紧的任务，项目组越来越自动化 站立会 —— 每人交代已完成的任务和遇到的问题（对于复杂问题会有专项讨论） 遇到问题，立刻停下来解决   缺点  不利于思维的发散   适合场景  要求处理目标用户前期反馈的新项目 业务要求不能被清晰地转换成产品需求的中型定制化项目      极限编程（XP）  属于敏捷开发的一种 与看板开发相比，更注重快速解决问题 团队人数少，人人平等，畅所欲言 优点  没有总体设计，设计过程贯穿始终 只要满足需求，通过测试即可（因为满足需求后，后期会有迭代版本）   缺点  对团队要求高 由于过程不拘泥于形式，后期文档在完整性上会有所欠缺 项目组成员流动会带来巨大问题   适合场景  要求处理目标用户前期反馈的新项目 业务要求不能被清晰地转换成产品需求的中型定制化项目 经常发生变化的项目、紧急上线任务和封闭开发等      从操作灵活性和用户参与度进行对比 </description>
    </item>
    
    <item>
      <title>ECOM7123 Understanding the Concept of Smart City</title>
      <link>https://www.marshalgao.com/ecom7123-understanding-the-concept-of-smart-city/</link>
      <pubDate>Wed, 06 Jan 2021 09:17:43 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/ecom7123-understanding-the-concept-of-smart-city/</guid>
      <description>Overview Difficulties and challenges
 our world is increasing challenged  urbanization ageing population social conflict inequality loss of nature pollution energy crisis climate change natural disaster resource depletion    Basic understanding
 definition of smart city  no official definition basically  the use of ICT (Information and Communications Technology) to improve the quality of life and city services, making the city more livable     ultimate goals  enhance quality of life  key indicators  health time and convenience safety cost of living jobs social connectedness and civic participation environmental quality     foster sustainable growth   leverage on technologies for better city management  IoT (data collection) big data (much data) AI (data analysis and prediction) above three technologies are based on GIS (Geographic Information System)    Building a Smart City Countries developing smart city initiatives with their own goals</description>
    </item>
    
    <item>
      <title>Integration and Link</title>
      <link>https://www.marshalgao.com/integration-and-link/</link>
      <pubDate>Tue, 05 Jan 2021 15:49:08 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/integration-and-link/</guid>
      <description>整合 vs 链路
 区别  整合是为了占据消费者心智 链路是为了驱动消费者行为   整合营销  在不同的地方，用同一个声音说话 整合各类营销资源，保持统一的声音和形象 将户外广告、公共关系、SEM（引擎营销）、内容营销、终端促销等看成一个整体，让不同的传播活动去共同打造统一的品牌形象 问题  信息碎片化程度超过了预期，无法有效整合所有的媒介 数字营销在不断进步，广告对消费者的影响周期缩短了  以往的广告和卖场是分离的，企业将广告信息浓缩在海报、电视广告中，目的是为了消费者在现在商场购物时，想到这个品牌 数字营销的广告和卖场是一体的，所见即所购，比如直播带货 广告不再是一种心智占领（整合），而是一种行为诱导（链路）   营销的潜台词是效果而不是品牌  由于每一笔广告的ROI，导致越来越多的广告主在意效果 效果广告注重消费者从看到广告到购买商品的整个行为链条 -&amp;gt; 链路       链路  链路在整合之余，更关注不同步骤的广告活动对消费行为的影响 在空间维度之外，加入了时间维度 驱动消费者行为决策   案例对比  蒙牛赞助《超级女声》，利用的就是整合营销，全方位的宣传 蒙牛赞助《创造营》，利用的就是链路  通过购买蒙牛产品进行投票 驱动了购买行为      链路法则
 互联网传播广告模型——AISAS法则  内容  Attention（注意） Interest（兴趣） Search（搜索） Action（购买） Share（分享）   使用范围  适合一些高决策力的产品，例如：汽车、手机、房产（价格高，需要深思熟虑）     增长黑客AARRR理论  传统企业营销目标是“卖货”，而互联网企业的目标是“获客” 由于移动互联网的发展，“拉新”代替了“品牌知名度”，“留存”代替了“复购” 内容  Acquisition（获取） Activation（激活） Retention（留存） Revenue（付费） Refer（推荐）   该理论提倡“去广告化”，“老用户带新用户” 前期广告的钱用来用户补贴和技术搭建，屡试不爽 案例  饿了么、滴滴、拼多多、美团      链路原则</description>
    </item>
    
    <item>
      <title>Programmatic Advertising</title>
      <link>https://www.marshalgao.com/programmatic-advertising/</link>
      <pubDate>Tue, 05 Jan 2021 12:02:50 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/programmatic-advertising/</guid>
      <description>定义
程序化广告是指广告主通过数字平台从受众的匹配的角度由程序自动化完成展示类广告的采买和投放，并实时反馈投放分析的一种广告投放方式，实现了整个数字广告的自动化。
四大特点
 数字平台  程序化广告是通过数字平台（DSP和ADX）进行投放 -&amp;gt; 最基本的特点 通过媒体方的广告投放平台进行投放，不算程序化广告，因为不经过DSP  例如，微信朋友圈广告（只有展示和不展示，并不涉及投放的选择）   场景类比  买菜的人（DSP）在菜市场（ADX）寻找摆摊的菜贩子（SSP）     受众角度  通过与用户画像（标签）进行匹配，做到广告的“千人千面“，实现精准营销 传统广告  购买广告位，并在一段展示时间内付费 目标流量的不明确，过于宽泛   程序化广告  购买受众流量 目标流量明确且精准 问题与挑战  品牌安全问题  品牌广告不应出现在暴力、色情等网站 例如，YouTube恐怖分子宣传视频出现某公司的广告       传统广告 vs 程序化广告    程序自动化  根据媒体主（SSP）竞价请求提供的信息，依据广告策略和算法自动完成对每次展示的竞价决策（是否出价、出价多少） 返回为毫秒级别，速度快 不需人为干涉，十分高效 有些已经实现自动优化功能，例如动态创意优化   展示类广告  程序化广告只在展示类广告存在 在线广告可以分为两种  搜索类广告 展示类广告  banner 信息流 背投 视频贴片        品牌方如何投放程序化广告</description>
    </item>
    
  </channel>
</rss>
