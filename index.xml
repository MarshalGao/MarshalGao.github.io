<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>This Is Marshal</title>
    <link>https://www.marshalgao.com/</link>
    <description>Recent content on This Is Marshal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Fri, 23 Aug 2024 16:14:56 +0800</lastBuildDate><atom:link href="https://www.marshalgao.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What Are Inverted Index and Boolean Retrieval?</title>
      <link>https://www.marshalgao.com/what-are-inverted-index-and-boolean-retrieval/</link>
      <pubDate>Fri, 23 Aug 2024 16:14:56 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/what-are-inverted-index-and-boolean-retrieval/</guid>
      <description>After being a search produt manager for a period of time, I frequently heard technical terms such as inverted index and boolean retrieval. Out of curiosity, I went to thoroughly learn about them.
Jumping out of the search engine, the so-called index is use a keyword to search and match from the beginning of the document until the corresponding query word is found. This method is logically simple, essentially brute-force disassembly, or exhaustive.</description>
    </item>
    
    <item>
      <title>Why Did I Start?</title>
      <link>https://www.marshalgao.com/why-did-i-start/</link>
      <pubDate>Fri, 27 Jan 2023 00:09:01 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/why-did-i-start/</guid>
      <description>This article was written on January 9, 2023. I have been working for almost two years. However, I found nothing useful left. For the same title, I wrote one in 2022. The first version was mostly helpless and roast, and I wrote a lot of words at that time, because I really had a lot to say. However, the previous roast was important and precious, and it reflected the thoughts at that time.</description>
    </item>
    
    <item>
      <title>Marshal K. Y. Ko</title>
      <link>https://www.marshalgao.com/about/</link>
      <pubDate>Wed, 25 Jan 2023 19:16:57 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/about/</guid>
      <description>Mr. Marshal Ko graduated from the University of Hong Kong with a Master&amp;rsquo;s degree. He has been working as a product manager for Internet industry in Mainland China for nearly two years. As an Internet product manager, Mr. Marshal Ko has successively worked in 58.com and Temu, mainly engaged in search engine optimization.
This website is mainly used to record the thinking of Internet products, programming skills, and personal video clips.</description>
    </item>
    
    <item>
      <title>Say Goodbye to Chaos</title>
      <link>https://www.marshalgao.com/say-goodbye-to-chaos/</link>
      <pubDate>Sun, 06 Jun 2021 17:25:36 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/say-goodbye-to-chaos/</guid>
      <description>   汽车倒行，转眼间，便早已暂停于车站。我们都曾幻想过两点一线的美好未来，但现实的红色离别与混沌向浑沌的难以逾越，让曾经戛然于现实的影子，只可远看，但不愿回味。站在未来预估现实的未来，我知道未来早已恢复于美好，但也要与这一切挥手道别。
 拖更很久，主要是和朋友们在一起玩得太开心！ 告别了混沌，一个人顶着受伤的jio骑车看了梅窝的风景，也和可爱的人儿去看了山海！ </description>
    </item>
    
    <item>
      <title>Basic Usage of R Language</title>
      <link>https://www.marshalgao.com/basic-usage-of-r-language/</link>
      <pubDate>Mon, 01 Feb 2021 12:17:11 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/basic-usage-of-r-language/</guid>
      <description>Installation R
 download from official website -&amp;gt; click here choose the mirror to download according your location and OS  RStudio
 ensure that you have installed R before installing RSudio download RStudio desktop from official website -&amp;gt; click here  Notebook
 can use RStudio also can use Kaggle  Basic Functions and Usage of R Language  practice in Kaggle  </description>
    </item>
    
    <item>
      <title>Study With Marshal</title>
      <link>https://www.marshalgao.com/study-with-marshal/</link>
      <pubDate>Sat, 16 Jan 2021 22:12:02 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/study-with-marshal/</guid>
      <description>   开学的已经开学，放假的也开始放假了，但是大家都要继续学习呀！ 给大家安利超赞的8小时学习法，每个小时分为 50 mins learning + 10 mins break！（视频放8次就好啦） 我们一起看海，听着Marshal最爱的白噪声，翻来覆去。。。的学习！！！ </description>
    </item>
    
    <item>
      <title>LeetCode[1179] Reformat Department Table</title>
      <link>https://www.marshalgao.com/leetcode1179-reformat-department-table/</link>
      <pubDate>Thu, 14 Jan 2021 15:51:59 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/leetcode1179-reformat-department-table/</guid>
      <description>Question Table: Department
+---------------+---------+ | Column Name | Type | +---------------+---------+ | id | int | | revenue | int | | month | varchar | +---------------+---------+ (id, month) is the primary key of this table. The table has information about the revenue of each department per month. The month has values in [&amp;quot;Jan&amp;quot;,&amp;quot;Feb&amp;quot;,&amp;quot;Mar&amp;quot;,&amp;quot;Apr&amp;quot;,&amp;quot;May&amp;quot;,&amp;quot;Jun&amp;quot;,&amp;quot;Jul&amp;quot;,&amp;quot;Aug&amp;quot;,&amp;quot;Sep&amp;quot;,&amp;quot;Oct&amp;quot;,&amp;quot;Nov&amp;quot;,&amp;quot;Dec&amp;quot;].  Write an SQL query to reformat the table such that there is a department id column and a revenue column for each month.</description>
    </item>
    
    <item>
      <title>LeetCode[627] Swap Salary</title>
      <link>https://www.marshalgao.com/leetcode627-swap-salary/</link>
      <pubDate>Thu, 14 Jan 2021 15:12:42 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/leetcode627-swap-salary/</guid>
      <description>Question Given a table salary, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a single update statement and no intermediate temp table.
Note that you must write a single update statement, DO NOT write any select statement for this problem.
Example:
| id | name | sex | salary | |----|------|-----|--------| | 1 | A | m | 2500 | | 2 | B | f | 1500 | | 3 | C | m | 5500 | | 4 | D | f | 500 |  After running your update statement, the above salary table should have the following rows:</description>
    </item>
    
    <item>
      <title>LeetCode[626] Exchange Seats</title>
      <link>https://www.marshalgao.com/leetcode626-exchange-seats/</link>
      <pubDate>Thu, 14 Jan 2021 14:50:32 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/leetcode626-exchange-seats/</guid>
      <description>Question Mary is a teacher in a middle school and she has a table seat storing students&#39; names and their corresponding seat ids.
The column id is continuous increment.
Mary wants to change seats for the adjacent students.
Can you write a SQL query to output the result for Mary?
+---------+---------+ | id | student | +---------+---------+ | 1 | Abbot | | 2 | Doris | | 3 | Emerson | | 4 | Green | | 5 | Jeames | +---------+---------+  For the sample input, the output is:</description>
    </item>
    
    <item>
      <title>LeetCode[620] Not Boring Movies</title>
      <link>https://www.marshalgao.com/leetcode620-not-boring-movies/</link>
      <pubDate>Thu, 14 Jan 2021 13:47:00 +0800</pubDate>
      
      <guid>https://www.marshalgao.com/leetcode620-not-boring-movies/</guid>
      <description>Question X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies’ ratings and descriptions.
Please write a SQL query to output movies with an odd numbered ID and a description that is not &amp;lsquo;boring&amp;rsquo;. Order the result by rating.
For example, table cinema:
+---------+-----------+--------------+-----------+ | id | movie | description | rating | +---------+-----------+--------------+-----------+ | 1 | War | great 3D | 8.</description>
    </item>
    
  </channel>
</rss>
